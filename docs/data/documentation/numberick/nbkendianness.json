{
  "abstract" : [
    {
      "text" : "An enumeration of little and big endianness.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Numberick\/documentation\/Numberick"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10NBKCoreKit13NBKEndiannessO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NBKEndianness"
      }
    ],
    "modules" : [
      {
        "name" : "Numberick"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "NBKEndianness"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "NBKEndianness"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "NBKEndianness"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "Static-vs-Dynamic",
          "level" : 3,
          "text" : "Static vs Dynamic",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Some algorithms differ depending on endianness. Generic type parameterization",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "can express the difference, but dynamic solutions are often viable. This type",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "encurages the latter.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/SQ",
        "doc:\/\/Numberick\/SH",
        "doc:\/\/Numberick\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth"
      ],
      "title" : "Models"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/big",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/little"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/system"
      ],
      "title" : "Type Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/numberick\/nbkendianness"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Numberick/SH": {
  "identifier" : "doc:\/\/Numberick\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://Numberick/SQ": {
  "identifier" : "doc:\/\/Numberick\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://Numberick/documentation/Numberick": {
  "abstract" : [
    {
      "text" : "✨ An arithmagick overhaul in Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Numberick",
  "type" : "topic",
  "url" : "\/documentation\/numberick"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt": {
  "abstract" : [
    {
      "text" : "A sequence that chunks elements of an un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "role" : "symbol",
  "title" : "NBKChunkedInt",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth": {
  "abstract" : [
    {
      "text" : "A composable, large, fixed-width, two’s complement, binary integer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth"
},
"doc://Numberick/documentation/Numberick/NBKEndianness": {
  "abstract" : [
    {
      "text" : "An enumeration of little and big endianness.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "role" : "symbol",
  "title" : "NBKEndianness",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness"
},
"doc://Numberick/documentation/Numberick/NBKEndianness/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness\/equatable-implementations"
},
"doc://Numberick/documentation/Numberick/NBKEndianness/big": {
  "abstract" : [
    {
      "text" : "A value representing a most-to-least-significant byte order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "big"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/big",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "NBKEndianness.big",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness\/big"
},
"doc://Numberick/documentation/Numberick/NBKEndianness/little": {
  "abstract" : [
    {
      "text" : "A value representing a least-to-most-significant byte order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "little"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/little",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "NBKEndianness.little",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness\/little"
},
"doc://Numberick/documentation/Numberick/NBKEndianness/system": {
  "abstract" : [
    {
      "text" : "Returns the current system’s byte order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "system"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit13NBKEndiannessO",
      "text" : "NBKEndianness"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness\/system",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "system",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness\/system"
},
"doc://Numberick/s8SendableP": {
  "identifier" : "doc:\/\/Numberick\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}