{
  "abstract" : [
    {
      "text" : "A namespace for proper binary integer algorithms.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Numberick\/documentation\/Numberick",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "NBKCoreKit",
    "externalID" : "s:10NBKCoreKit3NBKO19ProperBinaryIntegerO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ProperBinaryInteger"
      }
    ],
    "modules" : [
      {
        "name" : "Numberick",
        "relatedModules" : [
          "NBKCoreKit"
        ]
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ProperBinaryInteger"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "NBK.ProperBinaryInteger"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ProperBinaryInteger"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Integer"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Integer"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKBinaryInteger",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10NBKCoreKit16NBKBinaryIntegerP",
              "text" : "NBKBinaryInteger"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Proper binary integer models conform to ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKBinaryInteger",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/Magnitude"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/dividing(_:by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByBinaryAlgorithm(of:and:)-3yzy1",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByBinaryAlgorithm(of:and:)-48cqa",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-5qozj",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-9ugn7",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-3dlf3",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-5yhfa",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-7chbf",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidueReportingOverflow(dividing:by:)-4oxkw",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidueReportingOverflow(dividing:by:)-rhai",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/quotient(dividing:by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/remainder(dividing:by:)"
      ],
      "title" : "Type Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/numberick\/nbk\/properbinaryinteger"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Numberick/documentation/Numberick": {
  "abstract" : [
    {
      "text" : "âœ¨ An arithmagick overhaul in Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Numberick",
  "type" : "topic",
  "url" : "\/documentation\/numberick"
},
"doc://Numberick/documentation/Numberick/NBK": {
  "abstract" : [
    {
      "text" : "A namespace for ",
      "type" : "text"
    },
    {
      "code" : "Numberick",
      "type" : "codeVoice"
    },
    {
      "text" : " development.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBK"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBK"
    }
  ],
  "role" : "symbol",
  "title" : "NBK",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger": {
  "abstract" : [
    {
      "text" : "A namespace for proper binary integer algorithms.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ProperBinaryInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ProperBinaryInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBK.ProperBinaryInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/Magnitude": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Magnitude"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/Magnitude",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Magnitude"
    }
  ],
  "role" : "symbol",
  "title" : "NBK.ProperBinaryInteger.Magnitude",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/magnitude"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/dividing(_:by:)": {
  "abstract" : [
    {
      "text" : "Returns the ",
      "type" : "text"
    },
    {
      "code" : "quotient",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "remainder",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ZeroOrMore"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PowerOf2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2QRa",
      "text" : "QR"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/dividing(_:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dividing(_:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/dividing(_:by:)"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/greatestCommonDivisorByBinaryAlgorithm(of:and:)-3yzy1": {
  "abstract" : [
    {
      "text" : "Finds the GCD of ",
      "type" : "text"
    },
    {
      "code" : "lhs",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "rhs",
      "type" : "codeVoice"
    },
    {
      "text" : " by using ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/en.wikipedia.org\/wiki\/binary_GCD_algorithm",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKBinaryInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greatestCommonDivisorByBinaryAlgorithm"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Magnitude"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByBinaryAlgorithm(of:and:)-3yzy1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "greatestCommonDivisorByBinaryAlgorithm(of:and:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/greatestcommondivisorbybinaryalgorithm(of:and:)-3yzy1"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/greatestCommonDivisorByBinaryAlgorithm(of:and:)-48cqa": {
  "abstract" : [
    {
      "text" : "Finds the GCD of ",
      "type" : "text"
    },
    {
      "code" : "lhs",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "rhs",
      "type" : "codeVoice"
    },
    {
      "text" : " by using this ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/en.wikipedia.org\/wiki\/binary_GCD_algorithm",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKUnsignedInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greatestCommonDivisorByBinaryAlgorithm"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByBinaryAlgorithm(of:and:)-48cqa",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "greatestCommonDivisorByBinaryAlgorithm(of:and:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/greatestcommondivisorbybinaryalgorithm(of:and:)-48cqa"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-5qozj": {
  "abstract" : [
    {
      "text" : "Finds the GCD of ",
      "type" : "text"
    },
    {
      "code" : "lhs",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "rhs",
      "type" : "codeVoice"
    },
    {
      "text" : " by using this ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/en.wikipedia.org\/wiki\/extended_euclidean_algorithm",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKUnsignedInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greatestCommonDivisorByExtendedEuclideanAlgorithm"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> (result"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", lhsCoefficient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", rhsCoefficient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", lhsQuotient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", rhsQuotient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", iteration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-5qozj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/greatestcommondivisorbyextendedeuclideanalgorithm(of:and:)-5qozj"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-9ugn7": {
  "abstract" : [
    {
      "text" : "Finds the GCD of ",
      "type" : "text"
    },
    {
      "code" : "lhs",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "rhs",
      "type" : "codeVoice"
    },
    {
      "text" : " by using this ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/en.wikipedia.org\/wiki\/extended_euclidean_algorithm",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKSignedInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "greatestCommonDivisorByExtendedEuclideanAlgorithm"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> (result"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Magnitude"
    },
    {
      "kind" : "text",
      "text" : ", lhsCoefficient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", rhsCoefficient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", lhsQuotient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", rhsQuotient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ", iteration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Magnitude"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)-9ugn7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "greatestCommonDivisorByExtendedEuclideanAlgorithm(of:and:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/greatestcommondivisorbyextendedeuclideanalgorithm(of:and:)-9ugn7"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/leastPositiveResidue(dividing:by:)-3dlf3": {
  "abstract" : [
    {
      "text" : "Returns the least positive ",
      "type" : "text"
    },
    {
      "code" : "residue",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Integer.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leastPositiveResidue"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NonZero"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-3dlf3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leastPositiveResidue(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/leastpositiveresidue(dividing:by:)-3dlf3"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/leastPositiveResidue(dividing:by:)-5yhfa": {
  "abstract" : [
    {
      "text" : "Returns the least positive ",
      "type" : "text"
    },
    {
      "code" : "residue",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Integer.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leastPositiveResidue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "NonZero"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-5yhfa",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leastPositiveResidue(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/leastpositiveresidue(dividing:by:)-5yhfa"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/leastPositiveResidue(dividing:by:)-7chbf": {
  "abstract" : [
    {
      "text" : "Returns the least positive ",
      "type" : "text"
    },
    {
      "code" : "residue",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Integer.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leastPositiveResidue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PowerOf2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidue(dividing:by:)-7chbf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leastPositiveResidue(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/leastpositiveresidue(dividing:by:)-7chbf"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/leastPositiveResidueReportingOverflow(dividing:by:)-4oxkw": {
  "abstract" : [
    {
      "text" : "Returns the least positive ",
      "type" : "text"
    },
    {
      "code" : "residue",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Integer.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leastPositiveResidueReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3PVOa",
      "text" : "PVO"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidueReportingOverflow(dividing:by:)-4oxkw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leastPositiveResidueReportingOverflow(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/leastpositiveresiduereportingoverflow(dividing:by:)-4oxkw"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/leastPositiveResidueReportingOverflow(dividing:by:)-rhai": {
  "abstract" : [
    {
      "text" : "Returns the least positive ",
      "type" : "text"
    },
    {
      "code" : "residue",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Integer.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leastPositiveResidueReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3PVOa",
      "text" : "PVO"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/leastPositiveResidueReportingOverflow(dividing:by:)-rhai",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leastPositiveResidueReportingOverflow(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/leastpositiveresiduereportingoverflow(dividing:by:)-rhai"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/quotient(dividing:by:)": {
  "abstract" : [
    {
      "text" : "Returns the ",
      "type" : "text"
    },
    {
      "code" : "quotient",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "quotient"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ZeroOrMore"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PowerOf2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/quotient(dividing:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "quotient(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/quotient(dividing:by:)"
},
"doc://Numberick/documentation/Numberick/NBK/ProperBinaryInteger/remainder(dividing:by:)": {
  "abstract" : [
    {
      "text" : "Returns the ",
      "type" : "text"
    },
    {
      "code" : "remainder",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Integer",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "remainder"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "ZeroOrMore"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3NBKO",
      "text" : "NBK"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "PowerOf2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Integer"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/ProperBinaryInteger\/remainder(dividing:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "remainder(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/properbinaryinteger\/remainder(dividing:by:)"
},
"doc://Numberick/documentation/Numberick/NBKBinaryInteger": {
  "abstract" : [
    {
      "text" : "An integer type with a binary representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKBinaryInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKBinaryInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKBinaryInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKBinaryInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkbinaryinteger"
},
"doc://Numberick/s8SendableP": {
  "identifier" : "doc:\/\/Numberick\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
},
"https://en.wikipedia.org/wiki/binary_GCD_algorithm": {
  "identifier" : "https:\/\/en.wikipedia.org\/wiki\/binary_GCD_algorithm",
  "title" : "this binary algorithm",
  "titleInlineContent" : [
    {
      "text" : "this binary algorithm",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/en.wikipedia.org\/wiki\/binary_GCD_algorithm"
},
"https://en.wikipedia.org/wiki/extended_euclidean_algorithm": {
  "identifier" : "https:\/\/en.wikipedia.org\/wiki\/extended_euclidean_algorithm",
  "title" : "algorithm",
  "titleInlineContent" : [
    {
      "text" : "algorithm",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/en.wikipedia.org\/wiki\/extended_euclidean_algorithm"
}
}
}