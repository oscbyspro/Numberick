{
  "abstract" : [
    {
      "text" : "Forms the ",
      "type" : "text"
    },
    {
      "code" : "remainder",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "then returns the ",
      "type" : "text"
    },
    {
      "code" : "quotient",
      "type" : "codeVoice"
    },
    {
      "text" : ". Its arguments must match the arguments",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of one long division iteration.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Numberick\/documentation\/Numberick",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/StrictUnsignedInteger"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/StrictUnsignedInteger\/formRemainderWithQuotientLong2111MSBUnchecked(dividing:by:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Base",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "MutableCollection",
          "type" : "codeVoice"
        },
        {
          "text" : ", ",
          "type" : "text"
        },
        {
          "code" : "Base",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "RandomAccessCollection",
          "type" : "codeVoice"
        },
        {
          "text" : ", ",
          "type" : "text"
        },
        {
          "code" : "Base.Element",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "NBKCoreInteger",
          "type" : "codeVoice"
        },
        {
          "text" : ", and ",
          "type" : "text"
        },
        {
          "code" : "Base.Element",
          "type" : "codeVoice"
        },
        {
          "text" : " is ",
          "type" : "text"
        },
        {
          "code" : "Base.Element.BitPattern",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "NBKCoreKit",
    "externalID" : "s:10NBKCoreKit3NBKO21StrictUnsignedIntegerOAASMRzrlE45formRemainderWithQuotientLong2111MSBUnchecked8dividing2by7ElementSTQzxz_qd__tSkRd__AIQyd__AJRSAIST_10BitPatternAA06NBKBitQ11ConvertiblePQZAKRSlFZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "formRemainderWithQuotientLong2111MSBUnchecked"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "dividing"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Base"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "by"
      },
      {
        "kind" : "text",
        "text" : ": some "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sk",
        "text" : "RandomAccessCollection"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Base"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Element"
      },
      {
        "kind" : "text",
        "text" : ">) -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Base"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Element"
      }
    ],
    "modules" : [
      {
        "name" : "Numberick",
        "relatedModules" : [
          "NBKCoreKit"
        ]
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "formRemainderWithQuotientLong2111MSBUnchecked(dividing:by:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "formRemainderWithQuotientLong2111MSBUnchecked"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "dividing"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "dividend"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "inout"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "by"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "divisor"
            },
            {
              "kind" : "text",
              "text" : ": some "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sk",
              "text" : "RandomAccessCollection"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : ">) -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The current iteration’s ",
                  "type" : "text"
                },
                {
                  "code" : "remainder",
                  "type" : "codeVoice"
                },
                {
                  "text" : " slice from the ",
                  "type" : "text"
                },
                {
                  "code" : "quotient",
                  "type" : "codeVoice"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "element’s index. It must be exactly one element wider than the ",
                  "type" : "text"
                },
                {
                  "code" : "divisor",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "dividend"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The normalized ",
                  "type" : "text"
                },
                {
                  "code" : "divisor",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". Its last element’s most significant",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "bit must be set to ensure that the initial ",
                  "type" : "text"
                },
                {
                  "code" : "quotient",
                  "type" : "codeVoice"
                },
                {
                  "text" : " approximation does",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "not exceed the real ",
                  "type" : "text"
                },
                {
                  "code" : "quotient",
                  "type" : "codeVoice"
                },
                {
                  "text" : " by more than 2.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "divisor"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "Example-Usage-in-Long-Division-Algorithm",
          "level" : 2,
          "text" : "Example Usage in Long Division Algorithm",
          "type" : "heading"
        },
        {
          "code" : [
            "\/\/  try fast path",
            "\/\/  normalization",
            "",
            "var quotient = uninitialized(remainder.count - divisor.count) { quotient in",
            "    for index in quotient.indices.reversed() {",
            "        let digit = formRemainderWithQuotientLong2111MSBUnchecked(",
            "        dividing: &remainder[index ..< index + divisor.count + 1], by: divisor)",
            "        quotient.baseAddress!.advanced(by: index).initialize(to: digit)",
            "    }",
            "}",
            "",
            "\/\/ normalization",
            "\/\/ return values"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/numberick\/nbk\/strictunsignedinteger\/formremainderwithquotientlong2111msbunchecked(dividing:by:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Numberick/documentation/Numberick": {
  "abstract" : [
    {
      "text" : "✨ An arithmagick overhaul in Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Numberick",
  "type" : "topic",
  "url" : "\/documentation\/numberick"
},
"doc://Numberick/documentation/Numberick/NBK": {
  "abstract" : [
    {
      "text" : "A namespace for ",
      "type" : "text"
    },
    {
      "code" : "Numberick",
      "type" : "codeVoice"
    },
    {
      "text" : " development.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBK"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBK"
    }
  ],
  "role" : "symbol",
  "title" : "NBK",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk"
},
"doc://Numberick/documentation/Numberick/NBK/StrictUnsignedInteger": {
  "abstract" : [
    {
      "text" : "A namespace for strict unsigned integer algorithms.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StrictUnsignedInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/StrictUnsignedInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StrictUnsignedInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBK.StrictUnsignedInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/strictunsignedinteger"
},
"doc://Numberick/documentation/Numberick/NBK/StrictUnsignedInteger/formRemainderWithQuotientLong2111MSBUnchecked(dividing:by:)": {
  "abstract" : [
    {
      "text" : "Forms the ",
      "type" : "text"
    },
    {
      "code" : "remainder",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing the ",
      "type" : "text"
    },
    {
      "code" : "dividend",
      "type" : "codeVoice"
    },
    {
      "text" : " by the ",
      "type" : "text"
    },
    {
      "code" : "divisor",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "then returns the ",
      "type" : "text"
    },
    {
      "code" : "quotient",
      "type" : "codeVoice"
    },
    {
      "text" : ". Its arguments must match the arguments",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of one long division iteration.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Base",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "MutableCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "Base",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "RandomAccessCollection",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "Base.Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "Base.Element",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Base.Element.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formRemainderWithQuotientLong2111MSBUnchecked"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Base"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sk",
      "text" : "RandomAccessCollection"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Base"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Base"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBK\/StrictUnsignedInteger\/formRemainderWithQuotientLong2111MSBUnchecked(dividing:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formRemainderWithQuotientLong2111MSBUnchecked(dividing:by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbk\/strictunsignedinteger\/formremainderwithquotientlong2111msbunchecked(dividing:by:)"
}
}
}