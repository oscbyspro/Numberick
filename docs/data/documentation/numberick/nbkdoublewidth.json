{
  "abstract" : [
    {
      "text" : "A composable, large, fixed-width, two‚Äôs complement, binary integer.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Numberick\/documentation\/Numberick"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:17NBKDoubleWidthKit0aB0V",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NBKDoubleWidth"
      }
    ],
    "modules" : [
      {
        "name" : "Numberick"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "NBKDoubleWidth"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "NBKDoubleWidth"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@frozen"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "NBKDoubleWidth"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "High"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "High"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKFixedWidthInteger",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10NBKCoreKit20NBKFixedWidthIntegerP",
              "text" : "NBKFixedWidthInteger"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "High"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Digit"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKCoreInteger",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10NBKCoreKit0A7IntegerP",
              "text" : "NBKCoreInteger"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "High"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Digit"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "BitPattern"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Su",
              "text" : "UInt"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "üß©-Composable",
          "level" : 3,
          "text" : "üß© Composable",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is a generic software model for working with fixed-width",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "integers larger than one machine word. Its bit width is double the bit width of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "its ",
              "type" : "text"
            },
            {
              "code" : "High",
              "type" : "codeVoice"
            },
            {
              "text" : " component. In this way, you may construct new integer types:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "typealias  Int256 = NBKDoubleWidth< Int128>",
            "typealias UInt256 = NBKDoubleWidth<UInt128>"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "üíï-Twos-Complement",
          "level" : 3,
          "text" : "üíï Two‚Äôs Complement",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Like other binary integers, ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " has two‚Äôs complement semantics.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "The two's complement representation of  0 is an infinite sequence of 0s.",
            "The two's complement representation of -1 is an infinite sequence of 1s."
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "anchor" : "üè∞-Fixed-Width-Integer",
          "level" : 3,
          "text" : "üè∞ Fixed-Width Integer",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Each ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " has a fixed bit width, and so do its halves.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This design comes with a suite of overflow and bit-casting operations.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The even split also lends itself to divide-and-conquer strategies.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "üìñ-Trivial-UInt-Collection",
          "level" : 3,
          "text" : "üìñ Trivial UInt Collection",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " models a trivial ",
              "type" : "text"
            },
            {
              "code" : "UInt",
              "type" : "codeVoice"
            },
            {
              "text" : " collection, where ",
              "type" : "text"
            },
            {
              "code" : "UInt",
              "type" : "codeVoice"
            },
            {
              "text" : " is an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "unsigned machine word. It contains at least two words, but the exact count",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "depends on the platform‚Äôs architecture. You should, therefore, use",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "properties like ",
              "type" : "text"
            },
            {
              "code" : "startIndex",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "endIndex",
              "type" : "codeVoice"
            },
            {
              "text" : " instead of hard-coded indices.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ Int256 and UInt256, as constructed on a 64-bit platform:",
            "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê",
            "‚îÇ           Int256          ‚îÇ ‚îÇ          UInt256          ‚îÇ",
            "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§",
            "‚îÇ    Int128   ‚îÇ   UInt128   ‚îÇ ‚îÇ   UInt128   ‚îÇ   UInt128   ‚îÇ",
            "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§",
            "‚îÇ  Int ‚îÇ UInt ‚îÇ UInt ‚îÇ UInt ‚îÇ ‚îÇ UInt ‚îÇ UInt ‚îÇ UInt ‚îÇ UInt ‚îÇ",
            "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Swift‚Äôs type system enforces proper layout insofar as ",
              "type" : "text"
            },
            {
              "code" : "Int",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "UInt",
              "type" : "codeVoice"
            },
            {
              "text" : " are the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "only types in the standard library that meet its type requirements.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Specifically, only ",
              "type" : "text"
            },
            {
              "code" : "Int",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "UInt",
              "type" : "codeVoice"
            },
            {
              "text" : " have ",
              "type" : "text"
            },
            {
              "code" : "NBKCoreInteger<UInt>",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Digit",
              "type" : "codeVoice"
            },
            {
              "text" : " types.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "üöÄ-Single-Digit-Arithmagick",
          "level" : 3,
          "text" : "üöÄ Single Digit Arithmagick",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Alongside its ordinary arithmagick operations, ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " provides",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "single-digit operations, where a digit is an un\/signed machine word. These",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "operations are more efficient for small calculations. Here are some examples:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Int256(1) + Int(1), UInt256(1) + UInt(1)",
            "Int256(2) - Int(2), UInt256(2) - UInt(2)",
            "Int256(3) * Int(3), UInt256(3) * UInt(3)",
            "Int256(4) \/ Int(4), UInt256(4) \/ UInt(4)",
            "Int256(5) % Int(5), UInt256(5) % UInt(5)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The ",
                  "type" : "text"
                },
                {
                  "code" : "Digit",
                  "type" : "codeVoice"
                },
                {
                  "text" : " type is ",
                  "type" : "text"
                },
                {
                  "code" : "Int",
                  "type" : "codeVoice"
                },
                {
                  "text" : " when ",
                  "type" : "text"
                },
                {
                  "code" : "Self",
                  "type" : "codeVoice"
                },
                {
                  "text" : " is signed, and ",
                  "type" : "text"
                },
                {
                  "code" : "UInt",
                  "type" : "codeVoice"
                },
                {
                  "text" : " otherwise.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "anchor" : "‚≠êÔ∏è-Feature-StaticBigInt",
          "level" : 3,
          "text" : "‚≠êÔ∏è Feature: StaticBigInt",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "StaticBigInt",
              "type" : "codeVoice"
            },
            {
              "text" : " is disabled by default. You enable it in ",
              "type" : "text"
            },
            {
              "code" : "Package.swift",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "You can use ",
                  "type" : "text"
                },
                {
                  "code" : "StaticString",
                  "type" : "codeVoice"
                },
                {
                  "text" : " until ",
                  "type" : "text"
                },
                {
                  "code" : "StaticBigInt",
                  "type" : "codeVoice"
                },
                {
                  "text" : " becomes available.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKBinaryInteger",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKBitPatternConvertible",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKFixedWidthInteger",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKSignedInteger",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKUnsignedInteger",
        "doc:\/\/Numberick\/s18AdditiveArithmeticP",
        "doc:\/\/Numberick\/SK",
        "doc:\/\/Numberick\/Sz",
        "doc:\/\/Numberick\/Sl",
        "doc:\/\/Numberick\/SL",
        "doc:\/\/Numberick\/s23CustomStringConvertibleP",
        "doc:\/\/Numberick\/SQ",
        "doc:\/\/Numberick\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc:\/\/Numberick\/s27ExpressibleByIntegerLiteralP",
        "doc:\/\/Numberick\/s26ExpressibleByStringLiteralP",
        "doc:\/\/Numberick\/s33ExpressibleByUnicodeScalarLiteralP",
        "doc:\/\/Numberick\/s17FixedWidthIntegerP",
        "doc:\/\/Numberick\/SH",
        "doc:\/\/Numberick\/s25LosslessStringConvertibleP",
        "doc:\/\/Numberick\/SM",
        "doc:\/\/Numberick\/Sj",
        "doc:\/\/Numberick\/Sk",
        "doc:\/\/Numberick\/s8SendableP",
        "doc:\/\/Numberick\/ST",
        "doc:\/\/Numberick\/SZ",
        "doc:\/\/Numberick\/s13SignedNumericP",
        "doc:\/\/Numberick\/Sx",
        "doc:\/\/Numberick\/SU"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness"
      ],
      "title" : "Models"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/&__(_:_:)-37f10",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/&__(_:_:)-l69g"
      ],
      "title" : "Operators"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(ascending:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(descending:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(high:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(high:low:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(low:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(low:high:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ascending",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/descending",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/first",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/high-swift.property",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/last",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/lastIndex",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/low-swift.property",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/tail"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeft(major:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeft(major:minor:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeftSmart(by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRight(major:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRight(major:minor:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRightSmart(by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeft(major:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeft(major:minor:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeftSmart(by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRight(major:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRight(major:minor:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRightSmart(by:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/dividingFullWidth(_:)-6zn3u",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/dividingFullWidthReportingOverflow(_:)-27oc0",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/formQuotientWithRemainderReportingOverflow(dividingBy:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplied(by:adding:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multipliedFullWidth(by:adding:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multipliedReportingOverflow(by:adding:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiply(by:add:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplyFullWidth(by:add:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplyReportingOverflow(by:add:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/withContiguousMutableStorage(_:)",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/withContiguousStorage(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/subscript(unchecked:)"
      ],
      "title" : "Subscripts"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BitPattern-swift.typealias",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Digit",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/High-swift.typealias",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Low-swift.typealias",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Magnitude-swift.typealias"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/count-swift.type.property",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/description-swift.type.property",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/isSigned-94hrq"
      ],
      "title" : "Type Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/AdditiveArithmetic-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BidirectionalCollection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BinaryInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Collection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Comparable-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Equatable-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByIntegerLiteral-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByStringLiteral-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/FixedWidthInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Hashable-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/MutableCollection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKBinaryInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKBitPatternConvertible-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKFixedWidthInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKSignedInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Numeric-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/RandomAccessCollection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Sequence-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/SignedInteger-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/SignedNumeric-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Strideable-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/UnsignedInteger-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/numberick\/nbkdoublewidth"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Numberick/SH": {
  "identifier" : "doc:\/\/Numberick\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://Numberick/SK": {
  "identifier" : "doc:\/\/Numberick\/SK",
  "title" : "Swift.BidirectionalCollection",
  "type" : "unresolvable"
},
"doc://Numberick/SL": {
  "identifier" : "doc:\/\/Numberick\/SL",
  "title" : "Swift.Comparable",
  "type" : "unresolvable"
},
"doc://Numberick/SM": {
  "identifier" : "doc:\/\/Numberick\/SM",
  "title" : "Swift.MutableCollection",
  "type" : "unresolvable"
},
"doc://Numberick/SQ": {
  "identifier" : "doc:\/\/Numberick\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://Numberick/ST": {
  "identifier" : "doc:\/\/Numberick\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://Numberick/SU": {
  "identifier" : "doc:\/\/Numberick\/SU",
  "title" : "Swift.UnsignedInteger",
  "type" : "unresolvable"
},
"doc://Numberick/SZ": {
  "identifier" : "doc:\/\/Numberick\/SZ",
  "title" : "Swift.SignedInteger",
  "type" : "unresolvable"
},
"doc://Numberick/Sj": {
  "identifier" : "doc:\/\/Numberick\/Sj",
  "title" : "Swift.Numeric",
  "type" : "unresolvable"
},
"doc://Numberick/Sk": {
  "identifier" : "doc:\/\/Numberick\/Sk",
  "title" : "Swift.RandomAccessCollection",
  "type" : "unresolvable"
},
"doc://Numberick/Sl": {
  "identifier" : "doc:\/\/Numberick\/Sl",
  "title" : "Swift.Collection",
  "type" : "unresolvable"
},
"doc://Numberick/Sx": {
  "identifier" : "doc:\/\/Numberick\/Sx",
  "title" : "Swift.Strideable",
  "type" : "unresolvable"
},
"doc://Numberick/Sz": {
  "identifier" : "doc:\/\/Numberick\/Sz",
  "title" : "Swift.BinaryInteger",
  "type" : "unresolvable"
},
"doc://Numberick/documentation/Numberick": {
  "abstract" : [
    {
      "text" : "‚ú® An arithmagick overhaul in Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Numberick",
  "type" : "topic",
  "url" : "\/documentation\/numberick"
},
"doc://Numberick/documentation/Numberick/NBKBinaryInteger": {
  "abstract" : [
    {
      "text" : "An integer type with a binary representation.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKBinaryInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKBinaryInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKBinaryInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKBinaryInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkbinaryinteger"
},
"doc://Numberick/documentation/Numberick/NBKBitPatternConvertible": {
  "abstract" : [
    {
      "text" : "A type that can be converted to and from a bit pattern representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKBitPatternConvertible"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKBitPatternConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKBitPatternConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "NBKBitPatternConvertible",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkbitpatternconvertible"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt": {
  "abstract" : [
    {
      "text" : "A sequence that chunks elements of an un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "role" : "symbol",
  "title" : "NBKChunkedInt",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint"
},
"doc://Numberick/documentation/Numberick/NBKCoreInteger": {
  "abstract" : [
    {
      "text" : "A fixed-width, binary, integer that is up to 64 bits wide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKCoreInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKCoreInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKCoreInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKCoreInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkcoreinteger"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth": {
  "abstract" : [
    {
      "text" : "A composable, large, fixed-width, two‚Äôs complement, binary integer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/&__(_:_:)-37f10": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "&<<"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">, some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/&__(_:_:)-37f10",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "&<<(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/&__(_:_:)-37f10"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/&__(_:_:)-l69g": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "&>>"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">, some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sz",
      "text" : "BinaryInteger"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/&__(_:_:)-l69g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "&>>(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/&__(_:_:)-l69g"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/AdditiveArithmetic-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/AdditiveArithmetic-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AdditiveArithmetic Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/additivearithmetic-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/BidirectionalCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BidirectionalCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BidirectionalCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bidirectionalcollection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/BinaryInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BinaryInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BinaryInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/binaryinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/BitPattern-swift.typealias": {
  "abstract" : [
    {
      "text" : "The bit pattern of this type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BitPattern"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/BitPattern-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BitPattern"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth.BitPattern",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitpattern-swift.typealias"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Collection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Collection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Collection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/collection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Comparable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Comparable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Comparable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/comparable-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Digit": {
  "abstract" : [
    {
      "text" : "The digit of this type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Digit"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Digit",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Digit"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth.Digit",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/digit"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/equatable-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/expressiblebyextendedgraphemeclusterliteral-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/ExpressibleByIntegerLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByIntegerLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByIntegerLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/expressiblebyintegerliteral-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/ExpressibleByStringLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByStringLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByStringLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/expressiblebystringliteral-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/ExpressibleByUnicodeScalarLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ExpressibleByUnicodeScalarLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/expressiblebyunicodescalarliteral-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/FixedWidthInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/FixedWidthInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "FixedWidthInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/fixedwidthinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Hashable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Hashable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Hashable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/hashable-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/High-swift.typealias": {
  "abstract" : [
    {
      "text" : "The most  significant half of this type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "High"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/High-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "High"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth.High",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/high-swift.typealias"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Low-swift.typealias": {
  "abstract" : [
    {
      "text" : "The least significant half of this type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Low"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Low-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Low"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth.Low",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/low-swift.typealias"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Magnitude-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Magnitude"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Magnitude-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Magnitude"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth.Magnitude",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/magnitude-swift.typealias"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/MutableCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/MutableCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "MutableCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/mutablecollection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/NBKBinaryInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKBinaryInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NBKBinaryInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/nbkbinaryinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/NBKBitPatternConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKBitPatternConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NBKBitPatternConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/nbkbitpatternconvertible-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/NBKFixedWidthInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKFixedWidthInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NBKFixedWidthInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/nbkfixedwidthinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/NBKSignedInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/NBKSignedInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NBKSignedInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/nbksignedinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Numeric-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Numeric-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Numeric Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/numeric-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/RandomAccessCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/RandomAccessCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RandomAccessCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/randomaccesscollection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/sequence-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/SignedInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/SignedInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "SignedInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/signedinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/SignedNumeric-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/SignedNumeric-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "SignedNumeric Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/signednumeric-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/Strideable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Strideable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Strideable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/strideable-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/UnsignedInteger-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/UnsignedInteger-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "UnsignedInteger Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/unsignedinteger-implementations"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/ascending": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " halves of this value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ascending"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2LHa",
      "text" : "LH"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/ascending",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ascending",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/ascending"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftLeft(major:)": {
  "abstract" : [
    {
      "text" : "Performs a left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftLeft"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeft(major:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftLeft(major:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftleft(major:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftLeft(major:minor:)": {
  "abstract" : [
    {
      "text" : "Performs a left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftLeft"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minor"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeft(major:minor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftLeft(major:minor:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftleft(major:minor:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftLeftSmart(by:)": {
  "abstract" : [
    {
      "text" : "Performs a smart left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftLeftSmart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftLeftSmart(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftLeftSmart(by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftleftsmart(by:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftRight(major:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftRight"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRight(major:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftRight(major:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftright(major:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftRight(major:minor:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftRight"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minor"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRight(major:minor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftRight(major:minor:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftright(major:minor:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftRightSmart(by:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed, smart, right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftRightSmart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftRightSmart(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftRightSmart(by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftrightsmart(by:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedLeft(major:)": {
  "abstract" : [
    {
      "text" : "Performs a left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedLeft"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeft(major:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedLeft(major:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedleft(major:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedLeft(major:minor:)": {
  "abstract" : [
    {
      "text" : "Performs a left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedLeft"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minor"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeft(major:minor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedLeft(major:minor:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedleft(major:minor:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedLeftSmart(by:)": {
  "abstract" : [
    {
      "text" : "Performs a smart left shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedLeftSmart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedLeftSmart(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedLeftSmart(by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedleftsmart(by:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedRight(major:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedRight"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRight(major:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedRight(major:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedright(major:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedRight(major:minor:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedRight"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "major"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minor"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRight(major:minor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedRight(major:minor:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedright(major:minor:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/bitShiftedRightSmart(by:)": {
  "abstract" : [
    {
      "text" : "Performs an un\/signed, smart, right shift.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "bitShiftedRightSmart"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/bitShiftedRightSmart(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "bitShiftedRightSmart(by:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/bitshiftedrightsmart(by:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/count-swift.type.property": {
  "abstract" : [
    {
      "text" : "The number of words that fit in this integer type.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "count"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/count-swift.type.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "count",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/count-swift.type.property"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/descending": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " halves of this value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "descending"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2HLa",
      "text" : "HL"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/descending",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "descending",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/descending"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/description-swift.type.property": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "description",
      "type" : "codeVoice"
    },
    {
      "text" : " of this type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/description-swift.type.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "description",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/description-swift.type.property"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/dividingFullWidth(_:)-6zn3u": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dividingFullWidth"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">>) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2QRa",
      "text" : "QR"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/dividingFullWidth(_:)-6zn3u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dividingFullWidth(_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/dividingfullwidth(_:)-6zn3u"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/dividingFullWidthReportingOverflow(_:)-27oc0": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dividingFullWidthReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">>) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3PVOa",
      "text" : "PVO"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2QRa",
      "text" : "QR"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">>>"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/dividingFullWidthReportingOverflow(_:)-27oc0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dividingFullWidthReportingOverflow(_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/dividingfullwidthreportingoverflow(_:)-27oc0"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/first": {
  "abstract" : [
    {
      "text" : "The least significant word.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "first"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/first",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "first",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/first"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/formQuotientWithRemainderReportingOverflow(dividingBy:)": {
  "abstract" : [
    {
      "text" : "Forms the ",
      "type" : "text"
    },
    {
      "code" : "quotient",
      "type" : "codeVoice"
    },
    {
      "text" : " of dividing ",
      "type" : "text"
    },
    {
      "code" : "self",
      "type" : "codeVoice"
    },
    {
      "text" : " by ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    },
    {
      "text" : ", and returns",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "remainder",
      "type" : "codeVoice"
    },
    {
      "text" : " along with an ",
      "type" : "text"
    },
    {
      "code" : "overflow",
      "type" : "codeVoice"
    },
    {
      "text" : " indicator.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formQuotientWithRemainderReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "dividingBy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3PVOa",
      "text" : "PVO"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/formQuotientWithRemainderReportingOverflow(dividingBy:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formQuotientWithRemainderReportingOverflow(dividingBy:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/formquotientwithremainderreportingoverflow(dividingby:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/high-swift.property": {
  "abstract" : [
    {
      "text" : "The most  significant half of this value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "high"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/high-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "high",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/high-swift.property"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(ascending:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " halves.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ascending"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2LHa",
      "text" : "LH"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(ascending:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(ascending:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(ascending:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(descending:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " halves.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "descending"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2HLa",
      "text" : "HL"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(descending:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(descending:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(descending:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(high:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " half.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "high"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(high:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(high:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(high:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(high:low:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " halves.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "high"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "low"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(high:low:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(high:low:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(high:low:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(low:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " half.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "low"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(low:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(low:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(low:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/init(low:high:)": {
  "abstract" : [
    {
      "text" : "Creates a new instance from the given ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " halves.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "low"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "high"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/init(low:high:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(low:high:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/init(low:high:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/isSigned-94hrq": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSigned"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/isSigned-94hrq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSigned",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/issigned-94hrq"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/last": {
  "abstract" : [
    {
      "text" : "The most significant word.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "last"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/last",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "last",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/last"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/lastIndex": {
  "abstract" : [
    {
      "text" : "The index of the most significant word.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lastIndex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/lastIndex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "lastIndex",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/lastindex"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/low-swift.property": {
  "abstract" : [
    {
      "text" : "The least significant half of this value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "low"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Low"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/low-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "low",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/low-swift.property"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multiplied(by:adding:)": {
  "abstract" : [
    {
      "text" : "Returns the result of multiplication and addition.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multiplied"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "adding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplied(by:adding:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multiplied(by:adding:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multiplied(by:adding:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multipliedFullWidth(by:adding:)": {
  "abstract" : [
    {
      "text" : "Returns the ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : " parts of multiplication and addition.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multipliedFullWidth"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "adding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit2HLa",
      "text" : "HL"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V9Magnitudea",
      "text" : "Magnitude"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multipliedFullWidth(by:adding:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multipliedFullWidth(by:adding:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multipliedfullwidth(by:adding:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multipliedReportingOverflow(by:adding:)": {
  "abstract" : [
    {
      "text" : "Returns the result of multiplication and addition, along with an ",
      "type" : "text"
    },
    {
      "code" : "overflow",
      "type" : "codeVoice"
    },
    {
      "text" : " indicator.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multipliedReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "adding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10NBKCoreKit3PVOa",
      "text" : "PVO"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multipliedReportingOverflow(by:adding:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multipliedReportingOverflow(by:adding:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multipliedreportingoverflow(by:adding:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multiply(by:add:)": {
  "abstract" : [
    {
      "text" : "Forms the result of multiplication and addition.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multiply"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiply(by:add:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multiply(by:add:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multiply(by:add:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multiplyFullWidth(by:add:)": {
  "abstract" : [
    {
      "text" : "Forms the ",
      "type" : "text"
    },
    {
      "code" : "low",
      "type" : "codeVoice"
    },
    {
      "text" : " part of multiplication and addition, and returns the ",
      "type" : "text"
    },
    {
      "code" : "high",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multiplyFullWidth"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplyFullWidth(by:add:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multiplyFullWidth(by:add:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multiplyfullwidth(by:add:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/multiplyReportingOverflow(by:add:)": {
  "abstract" : [
    {
      "text" : "Forms the result of multiplication and addition, and returns an ",
      "type" : "text"
    },
    {
      "code" : "overflow",
      "type" : "codeVoice"
    },
    {
      "text" : " indicator.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "multiplyReportingOverflow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/multiplyReportingOverflow(by:add:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "multiplyReportingOverflow(by:add:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/multiplyreportingoverflow(by:add:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/subscript(unchecked:)": {
  "abstract" : [
    {
      "text" : "Accesses the word at the given index, from least significant to most.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "unchecked"
    },
    {
      "kind" : "text",
      "text" : " _: "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/subscript(unchecked:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(unchecked:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/subscript(unchecked:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/tail": {
  "abstract" : [
    {
      "text" : "The most significant word, reinterpreted as a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/Digit",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "tail"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17NBKDoubleWidthKit0aB0V",
      "text" : "NBKDoubleWidth"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "High"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Digit"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/tail",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "tail",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/tail"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/withContiguousMutableStorage(_:)": {
  "abstract" : [
    {
      "text" : "Grants unsafe access to the collection‚Äôs contiguous mutable storage.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withContiguousMutableStorage"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sr",
      "text" : "UnsafeMutableBufferPointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/withContiguousMutableStorage(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withContiguousMutableStorage(_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/withcontiguousmutablestorage(_:)"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth/withContiguousStorage(_:)": {
  "abstract" : [
    {
      "text" : "Grants unsafe access to the collection‚Äôs contiguous storage.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withContiguousStorage"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SR",
      "text" : "UnsafeBufferPointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth\/withContiguousStorage(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withContiguousStorage(_:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth\/withcontiguousstorage(_:)"
},
"doc://Numberick/documentation/Numberick/NBKEndianness": {
  "abstract" : [
    {
      "text" : "An enumeration of little and big endianness.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "role" : "symbol",
  "title" : "NBKEndianness",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness"
},
"doc://Numberick/documentation/Numberick/NBKFixedWidthInteger": {
  "abstract" : [
    {
      "text" : "An integer type with a fixed bit width for every instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKFixedWidthInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKFixedWidthInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKFixedWidthInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKFixedWidthInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkfixedwidthinteger"
},
"doc://Numberick/documentation/Numberick/NBKSignedInteger": {
  "abstract" : [
    {
      "text" : "A signed, binary, integer.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKSignedInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKCoreInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKSignedInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKSignedInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKSignedInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKSignedInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbksignedinteger"
},
"doc://Numberick/documentation/Numberick/NBKUnsignedInteger": {
  "abstract" : [
    {
      "text" : "An unsigned, binary, integer.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "NBKFixedWidthInteger",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "High.Magnitude",
        "type" : "codeVoice"
      },
      {
        "text" : ", ",
        "type" : "text"
      },
      {
        "code" : "High.Digit",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ", and ",
        "type" : "text"
      },
      {
        "code" : "High.Digit.BitPattern",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "UInt",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKUnsignedInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKUnsignedInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKUnsignedInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKUnsignedInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkunsignedinteger"
},
"doc://Numberick/s13SignedNumericP": {
  "identifier" : "doc:\/\/Numberick\/s13SignedNumericP",
  "title" : "Swift.SignedNumeric",
  "type" : "unresolvable"
},
"doc://Numberick/s17FixedWidthIntegerP": {
  "identifier" : "doc:\/\/Numberick\/s17FixedWidthIntegerP",
  "title" : "Swift.FixedWidthInteger",
  "type" : "unresolvable"
},
"doc://Numberick/s18AdditiveArithmeticP": {
  "identifier" : "doc:\/\/Numberick\/s18AdditiveArithmeticP",
  "title" : "Swift.AdditiveArithmetic",
  "type" : "unresolvable"
},
"doc://Numberick/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/Numberick\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://Numberick/s25LosslessStringConvertibleP": {
  "identifier" : "doc:\/\/Numberick\/s25LosslessStringConvertibleP",
  "title" : "Swift.LosslessStringConvertible",
  "type" : "unresolvable"
},
"doc://Numberick/s26ExpressibleByStringLiteralP": {
  "identifier" : "doc:\/\/Numberick\/s26ExpressibleByStringLiteralP",
  "title" : "Swift.ExpressibleByStringLiteral",
  "type" : "unresolvable"
},
"doc://Numberick/s27ExpressibleByIntegerLiteralP": {
  "identifier" : "doc:\/\/Numberick\/s27ExpressibleByIntegerLiteralP",
  "title" : "Swift.ExpressibleByIntegerLiteral",
  "type" : "unresolvable"
},
"doc://Numberick/s33ExpressibleByUnicodeScalarLiteralP": {
  "identifier" : "doc:\/\/Numberick\/s33ExpressibleByUnicodeScalarLiteralP",
  "title" : "Swift.ExpressibleByUnicodeScalarLiteral",
  "type" : "unresolvable"
},
"doc://Numberick/s43ExpressibleByExtendedGraphemeClusterLiteralP": {
  "identifier" : "doc:\/\/Numberick\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
  "title" : "Swift.ExpressibleByExtendedGraphemeClusterLiteral",
  "type" : "unresolvable"
},
"doc://Numberick/s8SendableP": {
  "identifier" : "doc:\/\/Numberick\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}