{
  "abstract" : [
    {
      "text" : "A sequence that chunks elements of an un\/signed source.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Numberick\/documentation\/Numberick"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10NBKCoreKit13NBKChunkedIntV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "NBKChunkedInt"
      }
    ],
    "modules" : [
      {
        "name" : "Numberick"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "NBKChunkedInt"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "NBKChunkedInt"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@frozen"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "NBKChunkedInt"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sk",
              "text" : "RandomAccessCollection"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKCoreInteger",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10NBKCoreKit0A7IntegerP",
              "text" : "NBKCoreInteger"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Base"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKCoreInteger",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10NBKCoreKit0A7IntegerP",
              "text" : "NBKCoreInteger"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "code" : [
            "for word in NBKChunkedInt(source, isSigned: false, count: nil, as: UInt.self) { ... }",
            "for byte in NBKChunkedInt(source, isSigned: false, count: nil, as: Int8.self) { ... }"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Binary-Integer-Order",
          "level" : 3,
          "text" : "Binary Integer Order",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This sequence is ordered like a binary integer, meaning it merges and splits",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "its elements from least significant to most. You can reorder it by reversing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the input, the output, or both.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "[1, 2, 3, 4] == Array(NBKChunkedInt(([0x0201, 0x0403] as [Int16]),            as: UInt8.self))",
            "[2, 1, 4, 3] == Array(NBKChunkedInt(([0x0201, 0x0403] as [Int16]).reversed(), as: UInt8.self).reversed())",
            "[3, 4, 1, 2] == Array(NBKChunkedInt(([0x0201, 0x0403] as [Int16]).reversed(), as: UInt8.self))",
            "[4, 3, 2, 1] == Array(NBKChunkedInt(([0x0201, 0x0403] as [Int16]),            as: UInt8.self).reversed())",
            "",
            "[0x0201, 0x0403] == Array(NBKChunkedInt(([1, 2, 3, 4] as [UInt8]),            as: Int16.self))",
            "[0x0102, 0x0304] == Array(NBKChunkedInt(([1, 2, 3, 4] as [UInt8]).reversed(), as: Int16.self).reversed())",
            "[0x0403, 0x0201] == Array(NBKChunkedInt(([1, 2, 3, 4] as [UInt8]),            as: Int16.self).reversed())",
            "[0x0304, 0x0102] == Array(NBKChunkedInt(([1, 2, 3, 4] as [UInt8]).reversed(), as: Int16.self))"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/SK",
        "doc:\/\/Numberick\/Sl",
        "doc:\/\/Numberick\/Sk",
        "doc:\/\/Numberick\/s8SendableP",
        "doc:\/\/Numberick\/ST"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKPrimeSieve"
      ],
      "title" : "Models"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/init(_:isSigned:count:as:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/base-swift.property",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/count",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/sign"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Base-swift.typealias"
      ],
      "title" : "Type Aliases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/BidirectionalCollection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Collection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/RandomAccessCollection-Implementations",
        "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Sequence-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/numberick\/nbkchunkedint"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Numberick/SK": {
  "identifier" : "doc:\/\/Numberick\/SK",
  "title" : "Swift.BidirectionalCollection",
  "type" : "unresolvable"
},
"doc://Numberick/ST": {
  "identifier" : "doc:\/\/Numberick\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://Numberick/Sk": {
  "identifier" : "doc:\/\/Numberick\/Sk",
  "title" : "Swift.RandomAccessCollection",
  "type" : "unresolvable"
},
"doc://Numberick/Sl": {
  "identifier" : "doc:\/\/Numberick\/Sl",
  "title" : "Swift.Collection",
  "type" : "unresolvable"
},
"doc://Numberick/documentation/Numberick": {
  "abstract" : [
    {
      "text" : "âœ¨ An arithmagick overhaul in Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Numberick",
  "type" : "topic",
  "url" : "\/documentation\/numberick"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt": {
  "abstract" : [
    {
      "text" : "A sequence that chunks elements of an un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKChunkedInt"
    }
  ],
  "role" : "symbol",
  "title" : "NBKChunkedInt",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/Base-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Base"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Base-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Base"
    }
  ],
  "role" : "symbol",
  "title" : "NBKChunkedInt.Base",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/base-swift.typealias"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/BidirectionalCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/BidirectionalCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BidirectionalCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/bidirectionalcollection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/Collection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Collection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Collection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/collection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/RandomAccessCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/RandomAccessCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RandomAccessCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/randomaccesscollection-implementations"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/sequence-implementations"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/base-swift.property": {
  "abstract" : [
    {
      "text" : "The un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "base"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Base"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/base-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "base",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/base-swift.property"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/count": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "count"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/count",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "count",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/count"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/init(_:isSigned:count:as:)": {
  "abstract" : [
    {
      "text" : "Creates a sequence of the given type from an un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Base"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "isSigned"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "count"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ".Type)"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/init(_:isSigned:count:as:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:isSigned:count:as:)",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/init(_:issigned:count:as:)"
},
"doc://Numberick/documentation/Numberick/NBKChunkedInt/sign": {
  "abstract" : [
    {
      "text" : "The sign extension of the un\/signed source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sign"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKChunkedInt\/sign",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sign",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkchunkedint\/sign"
},
"doc://Numberick/documentation/Numberick/NBKCoreInteger": {
  "abstract" : [
    {
      "text" : "A fixed-width, binary, integer that is up to 64 bits wide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKCoreInteger"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKCoreInteger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKCoreInteger"
    }
  ],
  "role" : "symbol",
  "title" : "NBKCoreInteger",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkcoreinteger"
},
"doc://Numberick/documentation/Numberick/NBKDoubleWidth": {
  "abstract" : [
    {
      "text" : "A composable, large, fixed-width, twoâ€™s complement, binary integer.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKDoubleWidth",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKDoubleWidth"
    }
  ],
  "role" : "symbol",
  "title" : "NBKDoubleWidth",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkdoublewidth"
},
"doc://Numberick/documentation/Numberick/NBKEndianness": {
  "abstract" : [
    {
      "text" : "An enumeration of little and big endianness.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKEndianness",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKEndianness"
    }
  ],
  "role" : "symbol",
  "title" : "NBKEndianness",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkendianness"
},
"doc://Numberick/documentation/Numberick/NBKPrimeSieve": {
  "abstract" : [
    {
      "text" : "A generator of all prime ",
      "type" : "text"
    },
    {
      "code" : "elements",
      "type" : "codeVoice"
    },
    {
      "text" : " through some ",
      "type" : "text"
    },
    {
      "code" : "limit",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NBKPrimeSieve"
    }
  ],
  "identifier" : "doc:\/\/Numberick\/documentation\/Numberick\/NBKPrimeSieve",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NBKPrimeSieve"
    }
  ],
  "role" : "symbol",
  "title" : "NBKPrimeSieve",
  "type" : "topic",
  "url" : "\/documentation\/numberick\/nbkprimesieve"
},
"doc://Numberick/s8SendableP": {
  "identifier" : "doc:\/\/Numberick\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}