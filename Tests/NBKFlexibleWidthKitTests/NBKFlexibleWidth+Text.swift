//=----------------------------------------------------------------------------=
// This source file is part of the Numberick open source project.
//
// Copyright (c) 2023 Oscar Bystr√∂m Ericsson
// Licensed under Apache License, Version 2.0
//
// See http://www.apache.org/licenses/LICENSE-2.0 for license information.
//=----------------------------------------------------------------------------=

import NBKCoreKit
import NBKFlexibleWidthKit
import XCTest

private typealias W = [UInt]
private typealias X = [UInt64]
private typealias Y = [UInt32]

//*============================================================================*
// MARK: * NBK x Flexible Width x Text x For Each Radix x UIntXL
//*============================================================================*

final class NBKFlexibleWidthTestsOnTextForEachRadixAsUIntXL: XCTestCase {
    
    typealias T = UIntXL
    
    //=------------------------------------------------------------------------=
    // MARK: State
    //=------------------------------------------------------------------------=
    
    /// The bit pattern: `0xfffefdfcfbfaf9f8...0706050403020100`.
    static let bytes =  T(x64:[
    0x0706050403020100, 0x0f0e0d0c0b0a0908, 0x1716151413121110, 0x1f1e1d1c1b1a1918,
    0x2726252423222120, 0x2f2e2d2c2b2a2928, 0x3736353433323130, 0x3f3e3d3c3b3a3938,
    0x4746454443424140, 0x4f4e4d4c4b4a4948, 0x5756555453525150, 0x5f5e5d5c5b5a5958,
    0x6766656463626160, 0x6f6e6d6c6b6a6968, 0x7776757473727170, 0x7f7e7d7c7b7a7978,
    0x8786858483828180, 0x8f8e8d8c8b8a8988, 0x9796959493929190, 0x9f9e9d9c9b9a9998,
    0xa7a6a5a4a3a2a1a0, 0xafaeadacabaaa9a8, 0xb7b6b5b4b3b2b1b0, 0xbfbebdbcbbbab9b8,
    0xc7c6c5c4c3c2c1c0, 0xcfcecdcccbcac9c8, 0xd7d6d5d4d3d2d1d0, 0xdfdedddcdbdad9d8,
    0xe7e6e5e4e3e2e1e0, 0xefeeedecebeae9e8, 0xf7f6f5f4f3f2f1f0, 0xfffefdfcfbfaf9f8])
    
    //=------------------------------------------------------------------------=
    // MARK: Assertions
    //=------------------------------------------------------------------------=
    
    func check(_ integer: T, radix: Int, ascii: String, file: StaticString = #file, line: UInt = #line) {
        var encoded = String(ascii.drop(while:{ $0 == "0" }))
        if  encoded.isEmpty {
            encoded.append(contentsOf: ascii.suffix(1))
        }
        
        NBKAssertDecodingText(integer, radix,          ascii, file: file,  line: line)
        NBKAssertDecodingText(integer, radix,        encoded, file: file,  line: line)
        NBKAssertEncodingText(integer, radix, true,  encoded.uppercased(), file: file, line: line)
        NBKAssertEncodingText(integer, radix, false, encoded.lowercased(), file: file, line: line)
    }
    
    //=------------------------------------------------------------------------=
    // MARK: Tests x Bytes
    //=------------------------------------------------------------------------=
    
    func test02() {
        self.check(Self.bytes, radix: 02, ascii: """
        1111111111111110111111011111110011111011111110101111100111111000\
        1111011111110110111101011111010011110011111100101111000111110000\
        1110111111101110111011011110110011101011111010101110100111101000\
        1110011111100110111001011110010011100011111000101110000111100000\
        1101111111011110110111011101110011011011110110101101100111011000\
        1101011111010110110101011101010011010011110100101101000111010000\
        1100111111001110110011011100110011001011110010101100100111001000\
        1100011111000110110001011100010011000011110000101100000111000000\
        1011111110111110101111011011110010111011101110101011100110111000\
        1011011110110110101101011011010010110011101100101011000110110000\
        1010111110101110101011011010110010101011101010101010100110101000\
        1010011110100110101001011010010010100011101000101010000110100000\
        1001111110011110100111011001110010011011100110101001100110011000\
        1001011110010110100101011001010010010011100100101001000110010000\
        1000111110001110100011011000110010001011100010101000100110001000\
        1000011110000110100001011000010010000011100000101000000110000000\
        0111111101111110011111010111110001111011011110100111100101111000\
        0111011101110110011101010111010001110011011100100111000101110000\
        0110111101101110011011010110110001101011011010100110100101101000\
        0110011101100110011001010110010001100011011000100110000101100000\
        0101111101011110010111010101110001011011010110100101100101011000\
        0101011101010110010101010101010001010011010100100101000101010000\
        0100111101001110010011010100110001001011010010100100100101001000\
        0100011101000110010001010100010001000011010000100100000101000000\
        0011111100111110001111010011110000111011001110100011100100111000\
        0011011100110110001101010011010000110011001100100011000100110000\
        0010111100101110001011010010110000101011001010100010100100101000\
        0010011100100110001001010010010000100011001000100010000100100000\
        0001111100011110000111010001110000011011000110100001100100011000\
        0001011100010110000101010001010000010011000100100001000100010000\
        0000111100001110000011010000110000001011000010100000100100001000\
        0000011100000110000001010000010000000011000000100000000100000000
        """)
    }
    
    func test03() {
        self.check(Self.bytes, radix: 03, ascii: """
        0000000000000000000000000000000000000000000000000001011122001202\
        0221000010120021121012122122121210201121000021000121212010111102\
        0021022202211121121121221212000020201221122210202201001002201010\
        0210001212020121021021121001210100100102120102122200201001202102\
        2220222111112021200221211122210111211012110122021212001101101012\
        0200211111121022021211100122022012211112112221002121112202200001\
        1001122202020122210212021001020200222212112100211020020010002221\
        0111000010011011101010021210201220102122102122212202102012220100\
        0111020201112002211002010001100110020220111111012101100222010221\
        0010122122022201020000102121202021200201200211001212202010110021\
        2001010202202101112000210220201111022010220200012021000020111021\
        2201012002120201120221122221012002222200122120210000120121000201\
        2012211022021200001122102120002110221102210110111021200002120202\
        2010012002002102202002201200210100102202220110101222010000222022\
        0200112200201010002020101100200110010000000002001202111210200020\
        0002120001222001110002220220221011110011011012201210101122122001\
        2111021020102211121020000002111101220000201210122212002012102220\
        1110200122122112012100001022010221010222101020220010000121012012\
        0010010122111111120110221020002211102201221020121121212111201100\
        0200121221120002212120101220100120101121122112221220012112011121\
        0121001121010221102001120121101000020200001000211102020110221110
        """)
    }
        
    func test04() {
        self.check(Self.bytes, radix: 04, ascii: """
        3333333233313330332333223321332033133312331133103303330233013300\
        3233323232313230322332223221322032133212321132103203320232013200\
        3133313231313130312331223121312031133112311131103103310231013100\
        3033303230313030302330223021302030133012301130103003300230013000\
        2333233223312330232323222321232023132312231123102303230223012300\
        2233223222312230222322222221222022132212221122102203220222012200\
        2133213221312130212321222121212021132112211121102103210221012100\
        2033203220312030202320222021202020132012201120102003200220012000\
        1333133213311330132313221321132013131312131113101303130213011300\
        1233123212311230122312221221122012131212121112101203120212011200\
        1133113211311130112311221121112011131112111111101103110211011100\
        1033103210311030102310221021102010131012101110101003100210011000\
        0333033203310330032303220321032003130312031103100303030203010300\
        0233023202310230022302220221022002130212021102100203020202010200\
        0133013201310130012301220121012001130112011101100103010201010100\
        0033003200310030002300220021002000130012001100100003000200010000
        """)
    }
        
    func test05() {
        self.check(Self.bytes, radix: 05, ascii: """
        0000000000000101011133132112303401331203113040334201212224114333\
        1331210120311431302322401423134214144114302234223323124032013102\
        2031310012312133044114114101403342401111141021424131121343010430\
        1421121331201040013433442113440322214443111221044313323014144300\
        0442200211013021440424413104144331034304433134022344442034220120\
        0203022440403030041413132134201411232022143440134130244204021202\
        4204221131331321003014044044023244032003434441023101312044413410\
        1432032422222011101300422133144024022310244143301333333131313132\
        1133101212222113330424040311111134211430243400332404421303012024\
        3301033334140414340340314003013204313402213301322411212023034201\
        2004134224142103031424130211110200431412144004241140022344304021\
        2024422012034413242431014044023232132211032301042413413421403001\
        0304124320331131120040124432124112202220433320304324003340021343\
        1324223134224004424011000321223301220134021034313232023030324130
        """)
    }
        
    func test06() {
        self.check(Self.bytes, radix: 06, ascii: """
        0000000000000000000000000000000000000001345131000552333115344121\
        1214023443243324324333122442522233415252532225231130540122100214\
        0215244235522514322330122325410454305413105211242412413243515420\
        4031415411205525200543134520405500520504130422250301225525122255\
        5304444554221253253024400132115002405214044033240245530335422552\
        3230145401344324044315001345525133204253014235441544150342233311\
        3102525333433242251435152053450224205545410400155320525214003341\
        0114031334552553523440515235201104055151034451040431352324424022\
        3220325011454332550413335135033252231132320134203510232401355331\
        2020345410240441033104340125314154522445134135421334244051303551\
        0152420450032004440445510515505305150554300514513545121304233402\
        1512140511314534242423200345252352143342420322435054213022035002\
        4325250215312305241230104233141315022325103343150130404400523320
        """)
    }
        
    func test07() {
        self.check(Self.bytes, radix: 07, ascii: """
        0000000000000000000000000000000000000024653320130023336353601340\
        0355512020400135330313404163116323361665214341655231546035543041\
        3335061463602013225153316300026621432263543366545536433610205024\
        3003025201644424044635410411626456311635136110623401315661102442\
        0612331166566162241453601510216450625624416556453020643500526255\
        4225530231005403046503563131246643640004650324634650424453045323\
        3644226261554166110441022133064452150660600363500515360604100635\
        1324126506201641562342434011560236352122640326266120664210323233\
        2635011020024026201015103132011050236605005335425545336151120104\
        5113112534231011226633116051366211215560241650222456652010032225\
        3614546631516640255632303266244531025632554125633416523166131412\
        3533422165650541466015660324101553116436025240606246521266532034
        """)
    }
        
    func test08() {
        self.check(Self.bytes, radix: 08, ascii: """
        0000000000000000000003777757677476775371761737667537236374570760\
        7376735573165752723643477156274470761341701577366735633366554730\
        6575332565151722643503176354671462745311621437066134230360540700\
        5773727557135672563342675553266454731261541276565332625352524650\
        5172324551121642503202374751663446715231461136264531222344510620\
        4370721543105612423042074150260440701201400775763727617336474570\
        3567316535071562342701573346655432665151320635463126214330460540\
        2765713527055532262541272545252424651121240475162324611322444510\
        2164310521041502202400771743647416635071160334661523206314430460\
        1362705513025452122240471142244410621041100174360721603306414430\
        0561302505011422042100170340641402605011020034060120200300400400
        """)
    }
        
    func test09() {
        self.check(Self.bytes, radix: 09, ascii: """
        0000000000000000000000000000000000000000000000000000000001148052\
        2700350753557855364700701776344207282747547855006657583681032633\
        2305521723753171031251258063167286874467627748714735418255041335\
        2074453825431826574548707748260131582218725231220885470736203087\
        1400313433325365637837878236581014221462732101313226444171328127\
        0357828120037766762162405566340761122671460726644263820167006437\
        8116252152758716288057670051702165738250048376073842713437602522\
        6316207266265071038281335810086820480633066340613100002052453606\
        0250186140282683440413565334856174236384536002441800653585065386\
        4361857517003812712833680301716503118444513836084381836547774640\
        2055750277635631634757585617514717047127361517330220030742213843
        """)
    }
        
    func test10() {
        self.check(Self.bytes, radix: 10, ascii: """
        0000000000000000000000032316509077753586139510713445660514514047\
        1715800934968659014776021432245405574123404729692361840203777454\
        0863807743939745614194869975427379141886998502749960224378577364\
        6750786158629119897527698459159582903277348091197804306308450975\
        2765897157258671077139706248797954495766510537726453385451362891\
        2932640350906509210810910107747204614412263847494852734365334510\
        5797020149055603954704727773430317796884279167058635246262041734\
        9145786264563977273862044757186140910253489061210709169291375411\
        8235589361595220880511748744523688475088623430039909767486996242\
        6348425792929710270231641017897005896324246640151098893336183040
        """)
    }
    
    func test11() {
        self.check(Self.bytes, radix: 11, ascii: """
        0000000000000000000000000000000000000000000000010142aa3554859615\
        1a9204496a56113782737a0530594194878213854265484228a2873210376102\
        298531554729267773485a52aaa2030350391963a7a0a94819183a184061767a\
        a1664196a92a29124a90906677a6159283540713930a23461662230751976003\
        75aa406a38a465902249a525645153a635a40a420899916a90a1749213325274\
        6766792593268189a459a23695332111336a2574023146139a17034537465a24\
        8967a2a50a37a69914126a360951448575372782095382a02084543002870940\
        85532153a572629110a97679073778890291691419a246a95a6016478938298a\
        358425533763a551898a379424822a252aa411a696485496052a6871743a226a\
        8989647385195622111666334615228957638330392039898693611430034583
        """)
    }
        
    func test12() {
        self.check(Self.bytes, radix: 12, ascii: """
        00001b9367266a6039066116339183036aaa985742938485bbb3a46470645276\
        569234baa5161788742348681a4a5b25ba61622633b09273b03b9aaa7514aa58\
        900baa9a74852ab0219481b21a86a3153bab534868478662a6191b1659b54964\
        ab9654b6430343071b655848847330017058b16480bb191b0985b8521152b521\
        563996041b3a74992b7126029326661485b6632a381a4ab4a820460396996731\
        1955a0b949642455a94aa27512b620a30373879b06207879078319104b12b4b9\
        b2ba94a962459429a746627b83089334822b767922152b60a66b497450a07244\
        b845b1558994981851b953005363a121880435bb95b546ab1558447212026a12\
        954b5492aa0367a34a0a961a50ba9a07b6279269932a4957a644a2a3a3920540
        """)
    }
        
    func test13() {
        self.check(Self.bytes, radix: 13, ascii: """
        000000000000000000000031cb7486735908c0144bc1018ac182c82a930a12ca\
        74aa7825455c0218a1479ca12843cb94baa0938378c1c8384b19b34340a64b01\
        4c927b86217b9a059379c40089c4314b035b5c702c8371c7c80104445bc99b56\
        057a91abc9acb1bc37950647b72045a5a647587b15c865bb75c2380191829a66\
        04a1184400818b29b9513b8c59490494649a18069b449c472c2366c76a2ca852\
        5096cc27207409700b2a636668139b428455c9a6ac67131b4589833577743c3a\
        7a091a293275c628b8a06625cb2a15734b58b3a57163a48014a7a5c277499614\
        79955285c36bc06b629543773288158648aa581166a042608899014254840857\
        15273b93212a908443abc9abc7929ba5810113319924a7468970130052605289
        """)
    }
        
    func test14() {
        self.check(Self.bytes, radix: 14, ascii: """
        00000000000000000000000000000000000000ad0745312ac38003406c77772a\
        c5d337dc56d71b0120a8035c347cd412ba206c7a19b3638983ad6c7dac8866db\
        ad3165c94d93a13248c199cda6773520749b9430c797c2bb0d8ca867ba5a063b\
        83d226939c0cbd8ab945b687021c84a90d7ba0d68cd37869a55260d1d780666b\
        0b6a3a99600cd5b1d80b84cc30bd74702723a1126cbdb5a42c285669194da766\
        c63c8d6d1aad3cc15dda115b2445580577049b2b7b818a839a3d0713a25586d3\
        109b2a74bb9cb5947074d06003a7d8559a8ab638c511c84c158d5c7033b7385d\
        777b7d6c35b83b7c4a497aa9b859dc77b943581b1799d547b62548548666b945\
        8d240951c39596c82589a5602b65a7c3b356a46269456953341674c2567b81c4
        """)
    }
        
    func test15() {
        self.check(Self.bytes, radix: 15, ascii: """
        0000000000000000000000000000000000000000000000000001adcc42d77564\
        2e8d25576598e679706b39b634284eb4323514682a6a176bc422a0b453010958\
        11db137066d571a2b91ec47eb29e5870c08bb8759a29eae1e60de477c04c2c97\
        a272774aaa2573b20764ea2a18c62d7c3660ec0387a7b658d71e5d9dc14245d0\
        163d05e294dac37d9a00339a9b41ee29b3c604d4350739ee6c2617a77c226325\
        8d6ca4cd40eb15b65a6341963a35035c8441616e6c21e1ec9d1bd1e3ed0a7c5b\
        349c68802a1365081776371784a3c99b4ab7774eaa850176c7e9d1c8cda75827\
        5e4ab4757030038b383714cd32c87c560ab2ecb8d102219ec16d0616544bcb2b\
        651732d918a54ee364a155a488725ac7ce563e994b90e86e485ad50d52e0aab0
        """)
    }
        
    func test16() {
        self.check(Self.bytes, radix: 16, ascii: """
        fffefdfcfbfaf9f8f7f6f5f4f3f2f1f0efeeedecebeae9e8e7e6e5e4e3e2e1e0\
        dfdedddcdbdad9d8d7d6d5d4d3d2d1d0cfcecdcccbcac9c8c7c6c5c4c3c2c1c0\
        bfbebdbcbbbab9b8b7b6b5b4b3b2b1b0afaeadacabaaa9a8a7a6a5a4a3a2a1a0\
        9f9e9d9c9b9a999897969594939291908f8e8d8c8b8a89888786858483828180\
        7f7e7d7c7b7a797877767574737271706f6e6d6c6b6a69686766656463626160\
        5f5e5d5c5b5a595857565554535251504f4e4d4c4b4a49484746454443424140\
        3f3e3d3c3b3a393837363534333231302f2e2d2c2b2a29282726252423222120\
        1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403020100
        """)
    }
    
    func test17() {
        self.check(Self.bytes, radix: 17, ascii: """
        0000000000124b16c3g69bbbag36b77367c8366826a1260aafe896c41e5bebd6\
        eff1edf76b5c850269d547g2993fg898a7eg88g8db235g6c407d4898b5a17d05\
        9g1d0fc9bgf991cagd36gae0bag2bg730e02b8265dg2e55825g7cdfe2fgedcg1\
        ba3dcc62916e6d11ggf6c160e48154efaf86ce618584dba7d1049ge226f62945\
        cgde056dffgb718cb2211bg5g72g77d5agd7e6b055e6b4ge71gg2e56be45c585\
        e31a98e65adc1c4560b001595gee6a7ec3cdgfb6248a0e351c5fa7gd40bc4afd\
        2cddf99e175db6fgf31545e48gfb055b4g39cca53b5a97f743922d73b7afb7d7\
        4928154d92b20gg7992e38cb96c1dd4bea7c7728fgb1127e0e47469feag585g0
        """)
    }
        
    func test18() {
        self.check(Self.bytes, radix: 18, ascii: """
        0000000000000000000018bga551hha58097eef06aa64bdbh0172b1dcf80417e\
        g30bdd9b1ac2bf53e416fgc92ef713dh5gfc36gcfa8961d4c4eef393d8c95hc4\
        0bf67b02ag05e7g833b3g6372d4b45169d4693ee6h64h53h6f9c34105cchd1b7\
        85h609326e8b38343d11a48cebcd7gd402h9d1gb4d9g74f33h1b6d5d47bd9bcf\
        h477eb91g0dd00f428942a478b32bb0eeddb0ch9822e66dbfd615bg4598h7eca\
        87f81ade8268f1c0fed0b0bh607g9dff3800a9ed58c0036d0258393463e561f1\
        96ag9g9d2af8495ge2bg3d961a7c04gf931h399da9f8g0d7540b9458fag6d4g1\
        85055ae5915ch6e98ab88g522b1cb92872cah62f92aa4c75ddg37ed0e80g746c
        """)
    }
        
    func test19() {
        self.check(Self.bytes, radix: 19, ascii: """
        0000000000000000000000000000017g2f692gg45a5gdf57gcg2g07g4h04bhfa\
        f8c01abeh9d0da94477aa600ddg25953cbh2363a71ghfdehi84ce7782ba4h3i0\
        3a3822ff9dg3hfh8h61cf785057g74ea5c4821g6ii4h020eif1992fihdh9hedf\
        020e2dfi21cii026d675dh1819abb0h2bd231egc2h34ei7egf3f4fg2dh0c7422\
        a26c52hgfe1cih2a6ahadie59ae8082c8e0ib75a3h9gdc10bh4d8969b7h57i38\
        2fb4806i8829h9591ch498hhc7b7d4c9f4d0gb28g72419a2298b3fa9731a32dc\
        d312cai90h6fi0g8401c1561f97gg2fia9822h6575ab83id41bab5cgbgihdaee\
        7aib31f1gah964c8076a4a1c91ghb0bg7hb407f2h52e28c213d98b3156g85i51
        """)
    }
        
    func test20() {
        self.check(Self.bytes, radix: 20, ascii: """
        00000000000000000000000000000000000000d5050cagd94ghbfad415d73775\
        385hih85hd9d80ec925gehjg1j04f2hhiahd169328ai8099750j9jf64g3eg281\
        863fi1cihc58jdec239iea6i88ci5640be2eddf81i0fj3005gib3ja486927438\
        6b499cdjj20f29d033023fa1f790bd472c7654g8b4eia3caf829di82457dgd8e\
        f03ch599i30j2bi0f383j43c59035c93d36g7h833ce0hd7555c378hh728j723b\
        71j23d885j99j36eb72703a83a5418h5ha0bcai1f6724dabd294104ieff49f37\
        ed043626hj5g7eccjjd76chd29g1a2520a88j370bcgac00a5j4h24dc168jgc16\
        431i8ced8d553fa0jg40cd577ich5ce5a93e8i8jdfa192c27390cff0a87b2hc0
        """)
    }
        
    func test21() {
        self.check(Self.bytes, radix: 21, ascii: """
        00000000000000000000000000000000000000000000025c52fbheeggjg8507d\
        fje9hf92hjbbficeaf8fi1634i6dbc8ccc4bci9a754b580283fibjbkkbdg8080\
        26g8e9h734gjj5547ek5hdafj86jab9kf90k9gg6ijiad7415f2eecba9k15891i\
        i929h5478643id40cfhfj51737ga9ggh2281a726a517daefbjafa83kegkgc6gg\
        e2a12973961j9d6ee925i231ja10046cka7j1ckg1391g5h35bj286a0ia14k0d3\
        3b6c7bi2278fffj4674h6bcjhhi4bg0f65h5h36878023282j9jc9c131di2ake8\
        ka3geadbckebhk979843g6ki6hbkh3a5h4k262h0g6f89k4896gk6aj93g8gje63\
        409g09916bb8e39hi5ci6djciki7hbd192de689hfjcab3ca39ie0fhg21ea33ji
        """)
    }
    
    func test22() {
        self.check(Self.bytes, radix: 22, ascii: """
        000000000000000000000000000000000000000000000000000023icle03ja5d\
        3hla1053987fc3i93924f5g21bledal5817e1ld8kd7hkl5ic03k8ji34bh740hf\
        jgj2cald12k4b36b2ffd5j09eej95024514ig2db9h3j4i19efbk269k785alk7g\
        hkd6fkf5e6804di2ek2gajf4j3db0l7cgi80jc1j68cib7211ada3616de8628ae\
        k8g9bka30fbe1ahde1c036ch92bckdg6kgg858b214i8518e404b29682a897hf4\
        3ibdi74gi642k7k14d5aj407j3agk5k1h04dfllc976ahdljcf64j18f14460hhd\
        4g6ikd7kh496eij9llkeif94kf6g0eg73k6i5226fd2i22ee11hjddj7ah0cij5j\
        kjklak3374ei0e8e0h32e55hef6d1e14b7gd05cgg9fii44kkckgd9fedh07h19e
        """)
    }
        
    func test23() {
        self.check(Self.bytes, radix: 23, ascii: """
        00000000000000000000000000000000000000000000000000000000000a4bj8\
        bale0d596ej9c12m593176b2m0lj5jdelhj11f35ffkh37ja5c4ff45hcffi725e\
        8cll095fbda26h4ab2mif00639jgmk0429bfl60a8j6fih25al8c04m9e9kgk9gf\
        j6lhf2h8bk6hel39dh1ebb5ik04f4egcfghihj2idmg2ch783i026fmmgj2e2kf6\
        85g0lkakj0ch8j0c2fel0ffg1k5eg0k0deimgfk4llii0i67g3ghd3ghmehkbbm8\
        32hael03fh143mk2ebeek17mjk7513c1ff98dmhfg12khmfff1077jl6cgg83085\
        7ce5lmh42bjmd10madl9m2m58kme472e3a8j79lj43d65m84be21l06h1h8hhd2f\
        7c13423b97i3b63d627ig0hg3mh0406dem3i77jfifj76ade42d66f48i5cmkg4l
        """)
    }
        
    func test24() {
        self.check(Self.bytes, radix: 24, ascii: """
        08ehhcaace58bei72i8ja72f5hjbgi07b6j65idm59bb5ni8eji1f6lc5g4d6h4g\
        j19gm0ke7lb5d34abbg45fdahn43hmb9gdmh2bn8g529al6jn540id9cjhle26hl\
        i7fm2bmcc1kj35583j173maele2kn5334k1gbm8kcajb2di0ff1hi1ad44adld34\
        a0a32n07mgij7k607949577b62d1c0abfina2jck0l8n1m2mh7ih6mh67dmc2ca4\
        58ihh733h1mbna818ifeh4b7im6j3gfchhfkj2jkcfd61e1i8inkliigg5f49967\
        7c1dd7b2nidi934nc3n0k1gj3dj2gg4g22lhg6nm1720kd1imbmf7ia45039bhn5\
        3lhc76memd39mlh4gbcim3a4n6a3fg86hgk1i29091ccj2md7h5gf2m92eg9l180
        """)
    }
        
    func test25() {
        self.check(Self.bytes, radix: 25, ascii: """
        0000001116i8b7fj1i736fkim1bce6ni8gb1ag9gfdck9d8m99l9fcjcid7kh1g2\
        agg07gbi4l96l1kimk6695bmlg78n14f9b78ga5k1jiob8o3cbon67b4n8hf99n0\
        4ma261fbo4elg49ng3n4ngj2dooajc1a232ekkff4988bja96dac9jk8lfem4272\
        m4c6gi8b0f94ko2ho3a3nol2g1gaolj59h3ecca6580mbi9ke2d5elnf8iiggggh\
        6i577cb8i4e43666jb9fej0ie4m831aei13ij949j3kgk31h4gj2bi1he6bad3m1\
        a48me9b339e826620n979k4e6k2dofkbaema73o8eeg1ko2hh8c63d14e8ljbkf1\
        347nai6g70k7oh7l7acaniafne0ik28n8ecgjck4mk603bci1c1j25jghh2ffhlf
        """)
    }
        
    func test26() {
        self.check(Self.bytes, radix: 26, ascii: """
        0000000000009ng7mg5k5b246fh6fejejo9g6je8amap102c3k88e96fdk7bbl0d\
        l937l2ii3hf448chk6imkjd827pek6j6f3k1gjcb2nbgmeg2639a3ldlgmd14ek2\
        ng6eh4194l1hp8dli4gl0k2m2lpna181bo90dfm7fh45jg1d5ijc591a754k6p28\
        bkkojapjhi24fj9p3paf7fkle9j67mefn6h47hoec2lpmcdg96po0eenja8b1p8h\
        34c36nckbl597ah5g424apke4h56kd2fho6nmph6cc66d32fhkg6944gk0e0i3og\
        lhjoo6ncaha3a7b9pdg14b12hl18ap0aga2b9eil7ebbalj1j8hb69g1g1nkb1ln\
        h5hgimc7k353o0im2kikcfcpi6m7mi6po47d3o6h868aoef5nb652fm0979373nm
        """)
    }
        
    func test27() {
        self.check(Self.bytes, radix: 27, ascii: """
        00000000000000000aeifkl0aimlgppnb4l0l1nfad678kmgggpn06jphlkj12j3\
        70gk5bbe9g333n3no69flqkpdfn2ndqaecgaonf443fimdg87m9h85meep2geki1\
        9eok5p7k9b68pml7b210qac09cd39nb5j7p7qh76hj0d6je2m2319c6odd5a9q3p\
        15nkob03nfkf6f79goj42f3b874f2bk4cobk0fl0jcnj52fjfphp52qihfl0fg0j\
        jpbkf0eln0m8cp44bf0n6o9f6786852a188ja5o92ooieij326a9ic30021kdli6\
        0n0hid0q88ad1aaog3enigclj8dli07d5i25aqf6g8jcihhe59183p3qa6o30g55\
        115mde48b0pcohb5egmfc21nmi8gj5j1j4mphnigfdlg1g3pb1fga06i10mb6cpc
        """)
    }
        
    func test28() {
        self.check(Self.bytes, radix: 28, ascii: """
        00000000000000000000011940hqcnpe5i8ehn6cf9c2f0qdd011eaflded1422e\
        75634p2b6b92chjhi5hhj17dg9o0bbn24c2anpjq2fdikdqfgnqp0em6ornlbkm4\
        4kajr457ir7f5mnrn5kaoo5o6m34f61gp10ra4g47pk8457hn4m0cpmqe8i6bm5g\
        1pprale858hm4bp4j20a1pof3dco6f09dpmo2f56ld770b761k5k3e9min8i2la8\
        9h90bi08n24m3pi37oiojg5pphr13mq8kdd4hfcnd8lmccraap804jjrim5m2qb9\
        2mnq4r96h4br824079ppojp20nrkmn6jra3gnrrip79ipp2b5d2dd239reenhfib\
        il1on3k9nncfhqfm0obdc9o3a1f6ilq96k8d1ikpmb0e3epn148mhjcoe78rnld4
        """)
    }
        
    func test29() {
        self.check(Self.bytes, radix: 29, ascii: """
        000000000000000000000000006qgf3bdirlm095h66i56k8k9p11hol00og9a39\
        3mqh7jjofh6bk49k4pbo044bb7k05ppq1jjo8j2kqe8iagllm50r6cdsafdlh915\
        k3iip9mns1o1o0rkaagpab2p8c50gd2cfc2gki5n448pjdsa5i6hsee9s2rp1n01\
        fa1grb4914df5l5l6e9ag8g511og0203m9hncndck52s220rb2f2bpng9leg4mbo\
        qpm0m9k203lrc9mg6fmg8bnmql4fnq3loe2q5nebe4aen0p5nmfadh9nfm8gf612\
        jle8mfq7c1712cgmfiiq0li30gbn883sch73j4ga098h64fqe3s7322rgjh335kp\
        5csoq4lqelgl4bjom4p15apc6aakaqi1h1lijpmcdogappk3l0caksrcscf2b6cd
        """)
    }
        
    func test30() {
        self.check(Self.bytes, radix: 30, ascii: """
        0000000000000000000000000000003gc906ob8d00p50qelnf8ma3n5p9phlaqa\
        csshfcol0gn470qt5shaa9prondsstf5jldjq1mjbj8droha6pganj1pnnkqhskb\
        qjd5k8b2lq7dhb3a0n6kmh0k4880q63tr6dpe3a1d7rr5p85pjirlar50b1tk9ht\
        ca9d5fpimnb4po0qombqsms8rb4re1rf41a629hbt9akhtn9ndoo2lgelmq0johi\
        ca565dm8o566k05eq1mg4d0f69rjcl9jlqi5jojeltt6a23b2pp9gkalr40o97o7\
        pgktp83180hdp6q0pfbhme70qi2apg738m324dao0ro0ak55q9e88aan0qre4r81\
        r76f8rfcca39dp5o34teq57r5jpl56aql1imhq4l9dmcom2ebtk25ddgth4jlss0
        """)
    }
        
    func test31() {
        self.check(Self.bytes, radix: 31, ascii: """
        00000000000000000000000000000000003o1q4rle1mom6e5aqbf2gi8q7r00tp\
        ktgt1mu2mfrkrhpo94lg60q0i8el6jk98q2k76nnh40nodjtolp3ps6m01lf72g5\
        qnhpnukeb6e74b1602gfgnoa71i0k8nit8onlcjlqeq2k7t7i3l6n279dalhl0t9\
        b9ibbpc1fa3anjjh7sb55fks9k08p3cl8fgabmrputg7smh3bh2d8on1q72c9qc2\
        oq4ka5pem6u93lkqjk0jk5ssqgd98er49nq1c4upp6726kalnqcpij5gg1rru7df\
        m8g0oscmlu68ffof2b9auiiga5bg8ob3qi8fbrg9fjr3aktct14c9cpjnres9rci\
        dso2trmmkneiq23h298ljg31mb43p1dq7qdl6lmb7de57euffnt5gas6r38j6018
        """)
    }
        
    func test32() {
        self.check(Self.bytes, radix: 32, ascii: """
        000000000000000000000000000000000000007vvruvpuvqv7sfftnlujpv5sfg\
        tvnerr7btbkuhpv6snie7on1s3fttnesrfddjm6nqrat9kuiq78cvjmdpj5slie8\
        ov3cbh63ob0s1ftunmubnelpn2rrdddkmepb3c5flqmqpatal6kaf9l5kihq58d0\
        juf9r74rjacph5smima974khi27ot3cche58j247gq2o90s2g607uvjtfhtnkubo\
        etr7at3je9on0rredlm6mqj9d1jmcpb4cdh62o2vbpelomqqb5c5elilah9l4kag\
        9t74qj2b994kghq68l246gi180vjsf9s7ct3ie1n6oqj8cpi64o2ubhd5glika98\
        4sj2a91348gi07ou3ke1m6gp30bhc58k2c91240f1o6go2oa1440e1g50g1g4080
        """)
    }
        
    func test33() {
        self.check(Self.bytes, radix: 33, ascii: """
        000000000000000000000000000000000000000000wf08osbkbu36iuk1a0c3mg\
        swowotq5g5rfb59tjo423qm0opnic8ukf83hnvggfa3ikaeqh7msfvwtd1m18tct\
        nrwfg3md55vf923rqh2grih41picatv6nf68ofkgn6gg312aomp3jo3ng217vrbs\
        lif6g8g5p29uhn54tck1q2dk22bfkoguw2fgc9gnnn492r3a0pgme41d6202qr53\
        0cnpf5tpu6pir1uk45l463l6lf91n1w99hicve8ts1ggum0jtup4rti3514019hd\
        f92b9vdnhu2ip86jhue3wol6d37l4njo26s9dmpow9dcwivflpts8lwrjci34ui3\
        seih7hhjjsn6equebc7ca2cr22guqmdsekwewboqq0mgptsi7nkqdrudnahilbl3
        """)
    }
        
    func test34() {
        self.check(Self.bytes, radix: 34, ascii: """
        00000000000000000000000000000000000000000000075eo27x9nu9tn7fi1ce\
        359cvtxx1332aewm3x4qd5llkfj17hxkrsc33uo3sdpp32kj0j3d6vtkmskluagv\
        m4x8d4vojgwvomju3b26lpor71l0a0do4xmdqh8jdiaj2bkokjuwh0v37ladu2he\
        pv65khfagbfqb0xnepxhi81rds2mup1k3i1db3ixlr1bb91x7rkolfoxd500wu41\
        wj3vbgxatgq5fw2p7tnfjn05u4gec6mt0x25d5k0adkodmjf248pl99ij159xxfd\
        64fw3ikxscupn4eks94cfnjxxcp954x6xb9mg3sbdqc0oai87dv16k2bqf06x42u\
        2vms3unwqoukwt8v36cmaavlecb5henbvw55gsp1ditrbk6amh0xdapxfqow7e80
        """)
    }
        
    func test35() {
        self.check(Self.bytes, radix: 35, ascii: """
        0000000000000000000000000000000000000000000000002ndxwb3ok6s4k5p5\
        ymr8u7p67b6xfhwiwyojwteq5qvdgrigdp50hwnq9e5dogmrg7x392dbx2vxkkr6\
        siwb3rnmah6xi2cee4qldu99xky5ggganqyaxgo7j22st8d5yj6l0wj78r31tkup\
        9e65y798485dsmnlnsbw9j8hdcbxntls6j4w30j3va6alba73h1c3rn98gsr7aey\
        x4ba5r79ufl1jelh6yeui0t5e5a9o021bsqphjxjy68g1ubmmcfec789r3v3cux0\
        5yyfhsi04iyjkiwbg2xjff5fw6y70eqsdhrajifhm2q9ybk11yy5tvh0bsxk0ttq\
        fpweb9h70r4fpx177pqg23dm8ck1xnvovqgvs2qp9g7nrlr4kpbnbhuowibrctep
        """)
    }
        
    func test36() {
        self.check(Self.bytes, radix: 36, ascii: """
        0000000000000000000000000000000000000000000000000001mvj05wljbmpd\
        8a2mrglgkrl8gqwelpwwxehf7iy1e62a2bgqnwhakfi8fhp4yiy96w7gg8pkrvyc\
        ojpy7czhc5r9tcoz0w5494eh31ezh8ezx4stye8xhigo1k7u2owa4olg2tx3nqhw\
        kiay1mrg4rb09twvlcqx1qnsbsb3qfl7j2wxlrkqhanbcxt2gcztp40bxcwwa0lp\
        1a39mzhxwmovwnc745vv3sv44jnfgqoekcku7trkz49lvn3kwf7kk1mcn6fg1nxj\
        ccmy6g4p3j4m1hjpywgt9pnq9mgovinv1wq4u3c4s4tv5bux5b5yi5avnt894fm2\
        b8a57jtmggfc3thfwalqq3eruydie3u2rhh2bjf5g8i6qla9b2fh6lrb1ios0wlc
        """)
    }
}

//*============================================================================*
// MARK: * NBK x Flexible Width x Text x Assertions
//*============================================================================*

private func NBKAssertFromDescription<T: IntXLOrUIntXL>(
_ integer: T?,  _ description: String,
file: StaticString = #file, line: UInt = #line) {
    //=------------------------------------------=
    XCTAssertEqual(T.init(description),            integer, file: file, line: line)
    XCTAssertEqual(T.init(description, radix: 10), integer, file: file, line: line)
}

private func NBKAssertDecodingText<T: NBKBinaryInteger> (
_ integer: T?, _ radix: Int, _ text: String,
file: StaticString = #file, line: UInt = #line) {
    //=------------------------------------------=
    if  radix == 10 {
        XCTAssertEqual(T.init(text), integer, file: file, line: line)
    }
    //=------------------------------------------=
    XCTAssertEqual(T.init(text, radix: radix), integer, file: file, line: line)
}

private func NBKAssertEncodingText<T: NBKBinaryInteger>(
_ integer: T, _ radix: Int, _ uppercase: Bool, _ text: String,
file: StaticString = #file, line: UInt = #line) {
    //=------------------------------------------=
    if  radix == 10 {
        XCTAssertEqual(String.init(integer), text, file: file, line: line)
        XCTAssertEqual(integer.description,  text, file: file, line: line)
    }
    //=------------------------------------------=
    XCTAssertEqual(String.init(integer,radix: radix, uppercase: uppercase), text, file: file, line: line)
    XCTAssertEqual(integer.description(radix: radix, uppercase: uppercase), text, file: file, line: line)
}
