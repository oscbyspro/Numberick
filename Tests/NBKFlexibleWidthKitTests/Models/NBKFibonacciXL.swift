//=----------------------------------------------------------------------------=
// This source file is part of the Numberick open source project.
//
// Copyright (c) 2023 Oscar Bystr√∂m Ericsson
// Licensed under Apache License, Version 2.0
//
// See http://www.apache.org/licenses/LICENSE-2.0 for license information.
//=----------------------------------------------------------------------------=

import NBKCoreKit
import NBKFlexibleWidthKit
import XCTest

private typealias W = [UInt]
private typealias X = [UInt64]
private typealias Y = [UInt32]

//*============================================================================*
// MARK: * NBK x FibonacciXL
//*============================================================================*

final class NBKFibonacciXLTests: XCTestCase {
    
    typealias T = NBKFibonacciXL
    
    //=------------------------------------------------------------------------=
    // MARK: Tests
    //=------------------------------------------------------------------------=
    
    func testInit() {
        XCTAssertEqual(T().index,   0 as UInt)
        XCTAssertEqual(T().element, 0 as UIntXL)
        XCTAssertEqual(T().next,    1 as UIntXL)
    }
    
    func testStartSequence() {
        NBKAssertFibonacciSequenceElement(0 as UInt, 0 as UIntXL)
        NBKAssertFibonacciSequenceElement(1 as UInt, 1 as UIntXL)
        NBKAssertFibonacciSequenceElement(2 as UInt, 1 as UIntXL)
        NBKAssertFibonacciSequenceElement(3 as UInt, 2 as UIntXL)
        NBKAssertFibonacciSequenceElement(4 as UInt, 3 as UIntXL)
        NBKAssertFibonacciSequenceElement(5 as UInt, 5 as UIntXL)
    }
    
    func testEachElementInUInt256() {
        self.continueAfterFailure = false
        
        var fibonacci = T(); while fibonacci.next <= UIntXL.max256 {
            NBKAssertFibonacciSequenceElement(fibonacci.index, fibonacci.element)
            fibonacci.increment()
        }
        
        XCTAssertEqual(fibonacci.index,   370 as UInt)
        XCTAssertEqual(fibonacci.element, UIntXL("094611056096305838013295371573764256526437182762229865607320618320601813254535"))
        XCTAssertEqual(fibonacci.next,    UIntXL("153083904475345790698149223310665389766178449653686710164582374234640876900329"))
    }
}

//*============================================================================*
// MARK: * NBK x FibonacciXL x Primes
//*============================================================================*

final class NBKFibonacciXLTestsOnPrimes: XCTestCase {
    
    typealias T = NBKFibonacciXL
    
    //=------------------------------------------------------------------------=
    // MARK: Tests
    //=------------------------------------------------------------------------=
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+1399
    func testPrime0222() {
        NBKAssertFibonacciSequenceElement(UInt(1399), UIntXL("""
        0000000000000000000000000001057362022138877586442790693627392471\
        4349424343122542609372806319825783387389898145491654340696207977\
        9703100859330541842708747836587076026853149515123668038994257349\
        6825711057526259113835863240488302877201171798455616630015796594\
        0742927387906176446848324713233936084752836275187153808643885101
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+2239
    func testPrime0333() {
        NBKAssertFibonacciSequenceElement(UInt(2239), UIntXL("""
        0000000000000000000000000000000000000000000037483619230023616383\
        1556956012890801755635223834456440078068598512042225565858378705\
        2775478508439311765008270803174379457823903626436917896144175108\
        1812500769712739265577812142790633886426904029644292656072176594\
        5442661544462371162680745392064002681693236118751836449122772276\
        7869284859173664595855541705821814253059049650198752630703006217\
        8339242653834274827433371972683579086589883072059016299647032544\
        7184786711538554743189201957494849217103385151192357985565557661
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+4019
    func testPrime0555() {
        NBKAssertFibonacciSequenceElement(UInt(4019), UIntXL("""
        0000000000000000000000000000000000000000000000000000000037311367\
        1412705742029424968910639277549742521996080310155045098365714482\
        4104908347036042361244599159615512769990330987960639730865498130\
        8072433775788325161992682362256795449665494209753670942172171272\
        2203967369999425701889153758837814681835559585933723133751806881\
        8496872580801685513615393162520513116429805804142523379378342551\
        4441029659216936210529080660370851401177631514342389875828339972\
        6614842546459415022870946655707302191026328812740600578177639873\
        3039042717454551010941945840815871118048005931668653125862093108\
        8958611234123487217337182078176768683790720523395222453566084951\
        4492498420355556195880899437692737868135183556431736743842980245\
        8400475635400414549626879469797956177065259238066131421408862659\
        3874545400735945578330890239131064772372045179036218495472538674\
        0316671667949438060397052349819774423263628326505983968411352681
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+5903
    func testPrime0777() {
        NBKAssertFibonacciSequenceElement(UInt(5903), UIntXL("""
        0000000000000000000000000000000000000000000000201630112973699547\
        8467033798246231765802235127399927076436839763410065672009048903\
        1282893541236712535277172854664465524821928062556461511462472243\
        6645751603027750072868408113686717270843656386576571239706531613\
        8832607318277041589340170938439083061589073645207050078640037387\
        3930944738614316892092679585355923400727053939446917720844859420\
        8475286500719315637423740931654098191825715510224786132537906089\
        2798464444270756081302801050898869097388615552432632699803372579\
        5006266664207612795271656344222004200834104891232199115031529879\
        2703171846839972134549632698690061406266150782100519904238693642\
        7990494803652598109479923921411786233223630306244612906702729633\
        0936722357821751129503986058477775784943438980499220967251871125\
        8907675708863225870261545152179027647035709552484493259087293234\
        3560027918334679621500613235053762398727366706896356186229959919\
        9113456220990739086184934440183082123185220867952003388928951448\
        6862918684679538218518939139423048219131427786458175412165472787\
        2317940678177228138520687104044551650142781207251510823550422463\
        0550656054019863500046679727553797345950068888003234780117695468\
        5001758459948949898864934140668770688345102830949505991111324318\
        0359205788328847352554207256070124136434254282285393279119106977
        """))
    }
    
    //=------------------------------------------------------------------------=
    // MARK: Tests
    //=------------------------------------------------------------------------=
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+8933
    func testPrime1111() {
        NBKAssertFibonacciSequenceElement(UInt(8933), UIntXL("""
        0000000000000000000000000000000000000000000000000000034443347309\
        3108100398874159428561534329862460467290782292059374507023810687\
        7269550645425648759105040052746760332244524364798820376920762224\
        6877914631058402796663109018927768541957271790876482142932617519\
        8232710764202658059416769653472274254504964579687081297720007624\
        6179906590303417326957815996792319972853675080055992845348080638\
        2943941858852559981242264436155281348871852261317229982765011629\
        7829399867445887010318141926897940016990199464221680611301721448\
        4111880877333055360925677292547757377288269228562446803652009867\
        7763837424235481301902728930839496921587048869618933660929975972\
        1517514025501625973594302218805499993099572559531211120925573758\
        1127211049766617087652687605434077686156615302804722142642742969\
        7236516259493575568417191119601844734416138650251441687029645552\
        9378027338036524313972052854242021568214636821793074375945751372\
        2350735288210709662405496337371540441013444112061964378877977540\
        7320833770153605816578141282892535002595557200364506492670167145\
        0726828768210402995804992032894376632638787592193974240697731462\
        4173426093112813331117064297373474850946738192421094692055974066\
        8615304600181591587016350586791290544589827230483506166379140081\
        1359202761416259334768284612565771296621865315396703987992963690\
        0711808907302535316355004671178400195617638079207154035431579923\
        6275073657060236813235586961734223575624017690360671164251634053\
        7904112899667901706234971327433315032760833359348656741794825127\
        0980333914295583912406671914635480194147780346368616686315693921\
        1960544365157853401078146277796468432978786175071982645306456832\
        5121277937989335078738684451639804479205134375476415837785960261\
        3072720886334722185655615819938336831138028603969967045606920077\
        3923425088074927054057487079424507914976894990682897213726723706\
        5641602992393369968566546050746410960720492622663285722794807997\
        8311465295401210944930675482964391010652349529256594693184486853
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+10781
    func testPrime1313() {
        NBKAssertFibonacciSequenceElement(UInt(10781), UIntXL("""
        0000000000000000000000000000000000000000000000000005575252393938\
        9726472552878851686358361695118909953805835298368747083115480810\
        4134206858282412439295319058881607250949303773993738147379991278\
        9066389219619830310354918122704287612505372628737469127809777201\
        1813475701346979469009944172420144596984822494955177372023557647\
        4043326938010670966508892540357298492565956868756293339723701132\
        8404250750366560095531400297763195438809085759814739595820309501\
        9617565922583583797982866665243330079239109282604215784965687742\
        3199127537109325220857944750281898171470259778544608936346797087\
        6915506943706869360771458402127275793501020646387627407249104762\
        2204554630802927208583175306259630935067305208225373494361458800\
        7096186599980318811061789356312606910681403036416628463971243044\
        9676454542542605700855087919781107617713561430014113975722279770\
        1943126909722546119017203186665120360983636830415022614609397450\
        9604753707365780210044755881283263888107066377496681747347015615\
        8514085822105828425523508374621670793710046241937432728541155733\
        0914849674581293014372528590738903198794885095978076379182211356\
        8850732564285080127893430205879638079510183584289648061314690419\
        5135955596853796607943727322148752306247174590234861143822254810\
        6951078192204608500403919930122086472602505237928300102314072907\
        7179369160802122078897866161437057394653943417426366481490741361\
        4289364844639936935015401554938898120880039903185920895379153050\
        8680984989744643618836532812439328568169858429217482962734527536\
        2112218628051472668046326964948590305480267978383608888402781258\
        4039624434468498804953615649454730516079195626785256716449895062\
        0683281068232871339690528745784450361412639047835817184698747525\
        1330839429557363015356657024930499413609803572635586116589269321\
        5854296106351102291227895539398459227240334326466881685777618726\
        1211503678186890387085065010835399785997747697962920002395011222\
        7618727367561167800274149949254487497443976531205358384475040120\
        0086277177318594857580065894215493599194537309040684176552912227\
        4788426089916667312131905399172381261820691014127614124391607030\
        8838007479628295381664256933648759302881044342226521123067649434\
        5341174643126781104974171560230306840526654475870921746361461904\
        5207826330444519833981042764782664689188565204047957279550140376\
        2211505037201946054045566600359608592562206893317574720788556981
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+14657
    func testPrime1717() {
        NBKAssertFibonacciSequenceElement(UInt(14657), UIntXL("""
        0000000006058402761451576720258256337477128057826862985648553231\
        7792747364397931841629915181414279266064883024426628396291466122\
        9177123797344399944935353883040192213562607370370942801296415674\
        4831940815115011704522807000416123941229043159865494449768268284\
        5213015343812477344582968345381553774862654915281304146488339229\
        0905751577864480452631488961486944090768718671777277058341949909\
        0598213463184153769971728000572922970601922048947523233477633862\
        4605940117480893067776137041766096080844967004804117122804759466\
        9006105930886794316120039824717802748443209168568841074845662889\
        6935726413247146161916158962195833997261590008433017661414179268\
        1831524200571257483454283270201487522745985204231016858721168376\
        4204838424490224992687215838073324412818476492336363527595903974\
        2632201125470648063465602204008209868358340208238831880244894853\
        8380938703087695071958351874730216254209174189928645314880310832\
        4775157435083240983288867292037332127832230384192457617428710419\
        0419438440074229054876357310667903268539675182119923471421252525\
        6537262552593093479745468473830739848278865552686343702365989517\
        3773211134129308445785053068898808762947645265952573217355793055\
        4850102686805811390241068600401491893717026095251537359730169457\
        3990081744311735200080667940019786365915959821622418269801682716\
        6596659992783767880986211139881334245693235383082252465376547092\
        4771719305421775423979399445370163126666135411541089674859434142\
        1835346304339925212842839556354290754209070463222830249340248293\
        1739993696040883790380813459754972316938279665637020715849857092\
        5061700639938106659144053614097794348042880102707047616330867299\
        6973292470394688344839778152623436816659227595915321227938328341\
        8695229413388365284802370295539401105001856037640545023329968983\
        9720520624847273775288825663411466903136750790075145785096609543\
        1363277499484940003702951321364758335635842013672725717191372841\
        0065626488944560040624474939147969708428874923902611421399953582\
        2200268101256765961743964970550205355001268110188839226049677505\
        1623087002378031163767895174628090371966482440348951525466700490\
        0306839887785292558258342701095931995686366367559877732669332257\
        1358756356346230890933338073842405693054665848682078025407632677\
        2620470192165802011259487595954200797717773358315419964815372299\
        6195409587630063775068328208088024558415834252378093842892718929\
        2299135473848125337595320340087904453745452079513158053622971165\
        4085240406291974087797856713448420777479401406754652943183985557\
        8868203699337170872194994288252608754978892688426536497188510815\
        7364026610714838180779459845051488817988582107375830890363050042\
        7853429696042257522758180430172108630956409978805438863836933092\
        4739581146926696299593021918958476990679847201833345597311390365\
        9880670405236266277006690355879105629282009156334550051866396408\
        4563190559147446283063349456439801769070355604620364159336926897\
        0285743171597680332987690386608022606450622931003173519957475251\
        4421556793365867802583688605873620149902834626905930182703487959\
        5789919592472269185943875384292090665220487632998608535326665307\
        8322112917847080756064230443788370332329358816888052386921588637
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+16573
    func testPrime1919() {
        NBKAssertFibonacciSequenceElement(UInt(16573), UIntXL("""
        0000000000000000000000000000000000000000000000000000000015946921\
        6595804360171148324186170504700247087490619017724032457673189638\
        8406563053857414743464065246822667413694564519388262483902542550\
        7304199719296116967907455494069941402609496025287503400080249071\
        6799346748096884891511650411342902626468451568408085175737224043\
        2011547064434093596081413407194809084531412469158235626097079599\
        4544081817757745947896950418000988242770836363338053376657871411\
        5598616012149116937365648815811675868069045756257264786759082574\
        0379202988560687772450367294176341690396840950168827943190173803\
        0245262792901909836914578777130937158419130954373312839400747264\
        5070533130795934700564479352231707645378096502364456874575890898\
        8514145855600850496027210479118770752496191274591554959033026411\
        2683428749134631988657824553937667845055339118615142651449416358\
        0905997624691969213616678439237042066477305009346447100369253689\
        3688334565987554374777457109676502759096458814654042501912335167\
        0706187390719630926967216257738013794523611050256116565490256231\
        9891136290574443453074828513767742039568535613753300798420089272\
        2225177115779689566506544422273288588262272759468906150468441359\
        6397175089896071209509123875268939776743236620957310216529259099\
        9141943426397131027691801550272209821018760599985945262861927406\
        9308251190780234336125927386217187911053158496005341601648249672\
        2401040493122812774460164272671061221091914763033925549937560394\
        6559665230830369854910585292832139715324065034507736029138309482\
        2312757918773899364634930497625081850227169787604737714651454450\
        9516285672211250722561838052711443661737163391222573206800382956\
        7402008355901388090106402658212300814840071046196772360719117469\
        2048080216235350346456247064285220256191464017708412972063996814\
        6429745908023111295091507078703296786049688925676540830776485849\
        8883041472117433223264782663990220348815837747673458579856454849\
        5335251858902496697861181020644338469215448158003546846387887720\
        6220867940421580823312471707704810612356068290594335958731433012\
        1118061742151671523996812265891356206632166854679526249246979861\
        3021142197850694945274033708740840977830764209705180218500547661\
        2848376395847006023633770283282925867961504875080994109763831607\
        4976100239412235386231903470189894313193983807604929600270781698\
        5940587113759076695652087202708375382498853097885759661720413638\
        0416871332567363274357246862035836632999686071143579586707431914\
        6323497245317108860950389361705272840388955884407740618983477580\
        7383474742557888511327713349572157192934163695609946438231170881\
        3006554862841085537945117214241498813126695273657866724995138310\
        9635215524263847364177520635773276504929770202486144145429157848\
        9992473449881488436645763988524107358640364006420973373647634965\
        5593633484530004623163597754642695072841607023346144269903190617\
        1135374869603116982074369621793523120568517217641298340701484950\
        2187393346175963513942839492977354054626260629553898018255345302\
        7810256629740526977349569945652764150426072332211130248793742077\
        3544538993768616165897011514905274092992594416861406822603855795\
        2394743069496689729862466445975464211441556129329994146357761647\
        2115354949796735070148198059437109189897347204481506628002678173\
        2388253133986778655734158089790160722730615407740177774172234257\
        8539470039391426726890791083194639399663729497784731973506650313\
        4775115288605677946764763407188650802066313549519177891446635219\
        1824446395826617363149926246728983123254560252324359143500529411\
        6050484096633397161792453290607298549620456797861688826608122173\
        6904113918598297451117909653465245260904946566563300071924368393
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+20599
    func testPrime2323() {
        NBKAssertFibonacciSequenceElement(UInt(20599), UIntXL("""
        0000000000000000000000000000000000000000000000038629270537189582\
        8529979283940967439802360646972098590319440271529768033095199302\
        3758130241095668320321605582674812524751729038532342939005581191\
        5852313415601963873313807646257614513607430604038480591636658114\
        1034809220533683560162480040259978110450115585485701095831574534\
        8471561702179686609282117307301726671811028923862563128730001136\
        9304239549137433567835279117039665545538916392135319260847410090\
        2940386106871226849989797761088211368775690846792535305626650069\
        1533415222384985832067470926096962224231289193175887556360836199\
        0109285065131116526146324009027018570107524189602680579137453274\
        2933205017049164995462600901232880476529618822140951413684387115\
        9688949251140022709919715928109411512245300615031816044721410980\
        7971559673879717157410392220128393490438452527391110631654576188\
        4870411289114651798946476748047091869685727271206997822805981066\
        2547021123129285466142482836785305504602152938906455060953275327\
        8769531288687749159393334553365369720237462193504816916687829598\
        9027661606674579151684873036377173184232047504292671539128465465\
        0186522318025302040007409175122452608233688868633543023529723749\
        0971888303705851314806767584806479111949175713378702583909301852\
        8660220367677156497008527761885684578246279285663550964684069232\
        0485907013011203440597823338513181901298053888840395646765393453\
        5020582849212564471509801252237360276763122153424515880682664287\
        3560150188489961590551438617878910619974208909978145724909090884\
        5925953690466207611034227801542453276207033245380240928462289197\
        8829475552659578415438826807529621137018964571651029050940227311\
        7815585849897001393958188039104380140895107981267235308324065396\
        2643078917311865172638219233796967781193452109134743057757607085\
        4471765406351026425518448983952031840112479488745855641116628217\
        6083149225670926255802062023512988291943699194002057093162176484\
        3836640836041252761384935127685044307659055293506159324674205902\
        2883065376023512902493665587451139635468244701079910415450533837\
        0167305370532653490899205762281435373738236077601729993676436172\
        6674866708693149640601914370112017488386183001955416258646268328\
        2906901681035907393036794860959587350357821360740107973168059353\
        3170872158813005154474290054865866002216141712360701363139172433\
        0529747633439789734038560043084297291611744800701049503511748434\
        9444156654199694548372109881650026477209594077220020260569756967\
        5043445683563434667094030181089841677385424941855473590669154876\
        6825236552847508423728100327786148503950184495715149123915222188\
        6778787577891909382358801159742037582097594000091774327237372615\
        5591498100224308950722080362544301086324851065279058150374983047\
        2827589535880653283965670177710328900386004750984407571799666441\
        3219453034084247931456268333741886306507259754575478680923014795\
        8614363552006832227029283595770467886199382519399364489861056266\
        7986340478288414292633005943027983639213182610305303113333808723\
        8400779440943492534930920184600153736932178875413016916496455813\
        5498135579354763656230107008910688041759827922058978859885847163\
        0750719599110541886157144516676995927968842277211309355808274430\
        0668910903471153895173322232355242398046349540749419513122447306\
        6658126222411522666207534858164122644659029739492990081078684082\
        6121266744156663272350313936440364720678062596818917231816899522\
        9649077315298342777221433996905557076887765706883067250140289922\
        5192861534495673788499741227523108269807892943116237351431048158\
        0755253280887792830212019334930546287352187134551874072371496350\
        8720370474391049174085392413004606230451803404142078245301869866\
        4892198696913485731552705987761774062672086299266503956939315781\
        4134704072796931626606350420407380476632203711249610433157983535\
        1384037365043805017015082776423061625433070372211030610324502079\
        9110067470790193838488239591139270050806272739561744343105080195\
        2348749294062218463990587961262685832167406776602602069764912935\
        4921350970937422748797177694783527787331244764255839670653311966\
        7721173723947531865654195534587908167254630232634099620460933000\
        9901467220096254677208328109791993173057095978938176526646955118\
        8228881106631370547849087601431485580667108502650198015351349219\
        4270994653050751095565020351346867793055017939430766649343635841\
        1662647627156027266594751041143972594742023010783979073324611281\
        8261495424248772493643391973322988200766709718376917562721443421\
        9519587071569548532206502355071998611351304749711271360148537901
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+26701
    func testPrime2929() {
        NBKAssertFibonacciSequenceElement(UInt(26701), UIntXL("""
        0000000000000000000000000000000000000000000000000000675300875109\
        0234929438935188767280246631646027578654026982038645465528096242\
        6426996474228975105541687765656964644464830940747498280830235424\
        2031931141315983895449752055136380893919950303539820327531101620\
        2323189593857678229639471061837212968488832795060305066128998515\
        2445222589631354303116100098854863447094244437516950303123502395\
        7811396615552173086277729189481229809408599467176687856100006194\
        7969077127677930835716725707618775449761944021527033983686650799\
        9988087731537573011024600707801055375512747543846864759999924065\
        2958073029512845206378900624995562864258599737308623622477253238\
        8186098584753007173913613451418080366009539886828873030677793787\
        7982127228538580063338262699017443471208292767123511696267977938\
        2091911574911494559385017518987699777817738874124851335636343463\
        0719718245175997014994650123235984840183738347325700287132440309\
        9867793431848098411705271166520994119942825801684960993541327992\
        5251617410899876800482194741477515315650005475068525751639218059\
        2630927130982685361384388276077280415689988666423268720052925636\
        8777451171993973468923935147019594244224567951532774834102103519\
        0837813583038097773455105112435571915969507201823136759111647941\
        4954739831339596799167107440954624894201928261844208892749739653\
        6746563504906609912279484045721419585025746486562349031240589243\
        9261329198015939592169562410200276565268453079450074540339805658\
        0532671887528127138285602401002971508847229188004506116260113508\
        6166941338624254832932090374110821271794318583083483957847495995\
        9354370411266292990181075684281401846274131626936961931105802226\
        7505927635502703620791200053191678670633318042194353285203267290\
        3205605630954018852233111935939120632188848966702550914162445261\
        3485367611377869467629761543171041065701947376143667672283621617\
        1379896374342955109313828494473119703073536842954005919813718892\
        9293448923804331513336315874960926375113726783218069971748978232\
        8689172475158860462745842000801015715056111594971470366663513744\
        9583379903964710607051122069597971659442255934402348272587217554\
        8394606450928602526521721312354359827416772710839999198330627467\
        5117190151873093526939557238129448125114838888372864471677900013\
        7373465358389391070601474167847485357834842600025100061435000035\
        6118692236540156850474258346560386044659291602724753363346027221\
        6214776214735813888062836325054654731854820935551338353077967903\
        1273137861831440355701385090237787410627837724347994297762941733\
        0236512351320363240096525178652160905088032203529209418992899536\
        9374132753839217901439580336383504454125598360345021349336681071\
        0390647650373291213880191743067349193829649286747160993444344717\
        5264107731694812332160327259326136668727385053253031879788204680\
        7461416228497264133998678536204389046795624613828110266563220278\
        5149356215859435473510727920261426099081592017011119881490982949\
        7023002067918672955927247288112423248921694513909595985051779324\
        2510994156667269945273260236165986445851612532840180037833644309\
        6287077541685200981777064803899487501036559502525282228254456119\
        1070901160881141716266743149826394630340530402812049953743614839\
        1453051301477541050346069082267332209965825572194733939498323190\
        6805275573138154604982233504548468589880423304091815383284186840\
        4622453269660083577638544632983245866819326330825182471007540937\
        6266379610250376797387686495628119067659573866025580059673234197\
        3092096076361471214691352767311049682547119749441710063154411605\
        2464352092562762618574849072183894921899200447333098289721754567\
        6613537085944038622683256986075357990440020263586795913304178407\
        2281241551493302396086632997070161892094522543349019684133169470\
        1411396169175064042200135820562002633332956274662379683672737009\
        0659838936593902163128256612055936132983075868995168279325418925\
        3106250930810534147888030189042307533889462307566537998210781609\
        4735153197852048437762899958854363099078007203923210820372467968\
        0205152820984539492603757631679212082727454614930808036105060801\
        0230559755035990248712761413957280222008813459677547690391469083\
        7794820341867232071597403431754582488152407830261464122639385070\
        0777590426863435094318682572063491344895252375919108079091965422\
        0101836570561609174623912761337832806562009926210373911779575565\
        3846743420381552582952183232516702798153821543049757862429733447\
        8167977685956334813323632814926669247886262219116010252040716135\
        2897476554437321847731075037020035950383432636877380402664896032\
        3859995452660921611533114597164502351187600869360932289993346982\
        9857582098882760846540869838953098184391294780120384390714682114\
        7499075897874225530699995806316633267716891194856751810563006088\
        0199330569871792460993720245786881303112584182110447094461058185\
        1999662418366149061526459414555506619138784703963966348504827390\
        6863305437623123933978422736834080969892805686986939655368293371\
        3377706557487026685257764985326698628421445516074006706169110624\
        5298802290663799157499089134769921914923358262532475599823761560\
        4483958565750749610881185330992185908390338629113902548769952108\
        6830869570653210304619977381319537655491467950816307059491892261\
        6992211184254688699789622049795884156642882638561963607005739786\
        1988378413519337958563166745062705487428149013040630091182073186\
        0076828872368594441240747249984053770523742798762458130752166754\
        7365349925062180430434115813625374893611576994970704106913918722\
        4760334451852575331317506774408478687735110293441510713556834046\
        2511699197541436392614083156255450622336998915690629623679934131\
        8928863961997506076922372592718381989821863599401654547051603339\
        7697379714496516685268486237901064126719277909321728995891868709\
        1925542849216077868099431758658201762160604000606437802340205351\
        9143234259377166658451685076865157931596415423153810612650692201
        """))
    }
    
    ///  https://www.wolframalpha.com/input?i2d=true&i=fibonnaci+28751
    func testPrime3131() {
        NBKAssertFibonacciSequenceElement(UInt(28751), UIntXL("""
        0000000179539422936879670273043077421513074187637090531654188941\
        5741714251061429371751580439620520390780557350979774794868208366\
        4166176620878272615316694300157066431179767088884468131326626406\
        6006793087609312815351213411657546695669274095062698689154398219\
        4273493634687995463092807527082580641615117429769927175041405435\
        0295797490359697968749112307931392970248348413038891015623785621\
        6088847611043512273516649762447035351619033256347137730401912564\
        3331923459443385236632710033100206681972486278892253338953989812\
        3946916355990491141327157042882267874194134287364062276578746447\
        9906202330820336469762881009578044941150880449686894920299840694\
        1491825760720059082900953382857229547427350359177762089685919844\
        7618397959101638970146048426296929999043034632587960523515344559\
        3760366379638998785266019668146381119294252066632685499014459540\
        3228626661986220007077177536233318464572108992736543438403328805\
        5574464598751322289974611560904876079017322893499933000150292780\
        9314181521891997450492395408326917003309389028222204533522299269\
        9642000490804899546448343060640047086553849375374919580904272499\
        2861624797203649272053099350900207574531796666472086817602155859\
        1726945528270185394184089768658379449840625960802021947544967032\
        4466186751708025198780714921940794569731981222458468445510099036\
        0443553766379370268117503080771639388168258715530538192587730633\
        8011648767649780378020253215618980934849061793639902195268270484\
        2839829671374952066915706595211206930317379946812934908158184018\
        6632013950586228393873546910724730610623601482513609286385660089\
        5583205661787583142839574359287019169878432307244569229200612045\
        5315250627992995880563363584077006573129537285154494784466671567\
        6932915680429008994407050765199142140297716924995768736291428740\
        5659885583080498298853597502387982203742256599364832940936912262\
        7306295914308130060217932216792472674883590412715203292872224381\
        9052280939272105914017040234667970649280968676984639911487164048\
        6950512688416085851306225825060523983737858111232273015386133906\
        3067106584779968201933848186941851209943130293249538453239817040\
        3166446141432467835847673289873984793187889019124685049346194236\
        9012603600383131016803724007081968761885862426032848180961930077\
        9950227963208023000595795424035960037191281549377793907086267841\
        5354352203190660234784252410121708238590550542287009655613245108\
        4416679066018355796949509138190703862193823826940976741589457419\
        9842183809073744133600807601681164860417876735323999739439826648\
        6396093302983871451192612904135076545912778407507119999762905951\
        0904335217479313753450789666808129764725813866718422907715543747\
        5344763133751758328696596023139757344616559598352109613358123372\
        5336145288103713015016170797186814486644452292159678982593774509\
        0858972188466104850594765553599721902079446786014336284406080746\
        6047070155943090400227067832916854600535823815502930111708409043\
        2646551842931647415209855009938485127601076223545576051292990210\
        2073345189649748973785384281664653132841926472290823737428037653\
        6301390966801847207486995822378225832339748068221848846740932398\
        3959466133500499766954176307273566790793220329043374920481301689\
        7354443162803012925024323638559444813297758478704463046749525448\
        3994253427313816352373748756985250548695717403420035283611811551\
        8903829328845718140654077721662950782418573463754497643481431064\
        3444759787070706038677485548256120377130269594213530852587880736\
        3063990392833728301764457275979490777842591550350013392734278293\
        0393930894524284143461403246004295880475120230584716506627288175\
        5954208405305936426750512693561765614064070467267484067260606449\
        3160788244304650910047777206727593713757409794734146439721983067\
        7409870968970884026847313052795953418080569240543747685844136978\
        5225197858237765766397728263719405697355726278399445515930357298\
        8820946469896191657334557780499195433494664378529806387436512888\
        9384612665032347753991477348768850268462782942582242628537367484\
        9666383666195546877373280285951667514644359014593205613661066790\
        2637643008076793963393319103431361492547474087057096618104945092\
        9068797079145859217618763638460930039892230437159663346142492177\
        3487965404583123116632813844515253796490318415246151607418608028\
        3165345513066792765071386479447739995779779804703780812619628392\
        0818316702529642078660025202341533889455931013711373344622660581\
        7998569624624648319474551095608887152210196761483059300431511310\
        8382114269844714319724855109740243228740858105309781623648408010\
        7923960983889953454879306942395750194186332543209679586920699011\
        6488027814044240538940310045469339495606646708566622415099015800\
        4029612595363304441617897449047010514432607944518064803360908350\
        3221111187440030745261296906933672534423314714794484547420193048\
        0822412634857367963841998731477632114802046883490061951648320782\
        1113969713026065616413746693504606279025231159734952205068924264\
        5445300445311422184567380131890416551079481518026600240603387378\
        1342039627717709671407636367938362954081810163995396023446847021\
        4631560420750186123322823291039949303888078407967268763717208095\
        2543903864295730492482781564450746654358853202741987848049019427\
        6997291932933637411541980129747240034390408819886320767106029202\
        2157076256100758673195322200389179370252504774367560355559349336\
        1421680232486838517875664644500753346409203626845922264415603503\
        6600023866782527437887467155147365535405191710659008737894371890\
        2544238762746656220809565535557780409118203706433673604351735361\
        1800390642391766176484428020897344653285440131973888356373655223\
        9957549790982938642228964935099790778423157577696154898603995912\
        2480143799026707122818026432168253584012508348126651287673108845\
        5775153316563617041325708734461855814522735925258064105229767393\
        9788941361715571270608197036912192258301294845630182802656964927\
        4745384928401986455586018549294785940736001683767865500630792096\
        5443200185649550920854638482906746241812642506927742506108188194\
        9878469667918098704628894843753687311207089697195422433354870257\
        2096820521441917774150069112449092359767362686064167992531585299\
        6612569833761373691337107507656423822097124691089029473989643597\
        4231470719178170567974934919172609491675022209246170315053321249
        """))
    }
}

//*============================================================================*
// MARK: * NBK x FibonacciXL x Assertions
//*============================================================================*

private func NBKAssertFibonacciSequenceElement(
_ index: UInt, _ element: UIntXL,
file: StaticString = #file, line: UInt = #line) {
    //=------------------------------------------=
    let x0 = NBKFibonacciXL(index + 0)
    let x1 = NBKFibonacciXL(index + 1)
    //=------------------------------------------=
    XCTAssertEqual(x0.element, element,  file: file, line: line)
    XCTAssertEqual(x0.next, x1.element,  file: file, line: line)
    XCTAssertEqual(x1.next, x0.element + x1.element, file: file, line: line)
    //=------------------------------------------=
    increment: do {
        var x = x0; x.increment()
        XCTAssertEqual(x.index,   x1.index,   file: file, line: line)
        XCTAssertEqual(x.element, x1.element, file: file, line: line)
        XCTAssertEqual(x.next,    x1.next,    file: file, line: line)
    }
    
    decrement: do {
        var x = x1; x.decrement()
        XCTAssertEqual(x.index,   x0.index,   file: file, line: line)
        XCTAssertEqual(x.element, x0.element, file: file, line: line)
        XCTAssertEqual(x.next,    x0.next,    file: file, line: line)
    }
    
    double: do {
        var x = NBKFibonacciXL(index / 2); x.double(); if index.isOdd { x.increment() }
        XCTAssertEqual(x.index,   x0.index,   file: file, line: line)
        XCTAssertEqual(x.element, x0.element, file: file, line: line)
        XCTAssertEqual(x.next,    x0.next,    file: file, line: line)
    }
}
