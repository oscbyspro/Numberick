name: Build & Tests
on: [push, pull_request]
jobs:
  macos:
    strategy:
      matrix:
        tests: 
          - xcode: '14.2'
            features: '-StaticBigInt'
          - xcode: '14.3.1'
            features: '-StaticBigInt'
          - xcode: '14.3.1'
            features: '+StaticBigInt'
    runs-on: macos-13
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create sources zip
        run: |
            tempfile=$(mktemp -u).zip
            zip -r "${tempfile}" ./*
            echo "SOURCES_ZIP=${tempfile}" >> "$GITHUB_ENV"
      - name: Select Swift custom features
        run: |
          for feature in "${{ matrix.tests.features }}"
          do
            [ "${feature}" ] || continue
            status=$([[ "${feature}" = -* ]] && echo "false" || echo "true")
            feature="${feature:1}"
            sed -i '' "s|^let[[:blank:]]*with${feature}[[:blank:]]*=.*$|let with${feature} = ${status}|g" Package.swift
            echo "NBK_FEATURE_${feature}=${status}" >> "$GITHUB_ENV"
            echo "${feature} = ${status}"
          done
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.tests.xcode }}.app
      - name: Build and Test macOS
        run: xcodebuild test -scheme 'Numberick' -destination "platform=macOS"
      - name: Benchmarks macOS
        run: xcodebuild test -scheme 'Numberick-Benchmarks' -destination "platform=macOS"
      - name: Build and Test iOS Simulator
        run: xcodebuild test -scheme 'Numberick' -destination "platform=iOS Simulator,name=iPhone 14"
      - name: Benchmarks iOS Simulator
        run: xcodebuild test -scheme 'Numberick-Benchmarks' -destination "platform=iOS Simulator,name=iPhone 14"
      - name: Build and Test tvOS Simulator
        run: xcodebuild test -scheme 'Numberick' -destination "platform=tvOS Simulator,name=Apple TV"
      - name: Benchmarks tvOS Simulator
        run: xcodebuild test -scheme 'Numberick-Benchmarks' -destination "platform=tvOS Simulator,name=Apple TV"
      - name: Build and Test watchOS Simulator
        run: xcodebuild test -scheme 'Numberick' -destination "platform=watchOS Simulator,name=Apple Watch Series 6 (40mm)"
      - name: Benchmarks watchOS Simulator
        run: xcodebuild test -scheme 'Numberick-Benchmarks' -destination "platform=watchOS Simulator,name=Apple Watch Series 6 (40mm)"
      - name: Setup Local CocoaPods Repo
        run: |
          COCOAPODS_LOCAL_REPO=$(mktemp -d)
          git init --bare -b main "$COCOAPODS_LOCAL_REPO"
          git clone "$COCOAPODS_LOCAL_REPO" git_temp_dir
          cd git_temp_dir
          touch .gitignore && git add .gitignore && git commit -a -m "repo init" && git push
          cd ../ && rm -rf git_temp_dir
          pod repo add local "${COCOAPODS_LOCAL_REPO}"
          pod repo update
          echo "COCOAPODS_LOCAL_REPO=${COCOAPODS_LOCAL_REPO}" >> "$GITHUB_ENV"
      - name: CocoaPods 'Numberick-CoreKit' Lint & Local Push 
        run: |
          sed -i '' "s|[[:blank:]]*s\.source[[:blank:]].*|s.source = { :http => 'file://${SOURCES_ZIP}' \}|g" pods/Numberick-CoreKit.podspec
          pod repo push --allow-warnings local pods/Numberick-CoreKit.podspec
          pod repo update
      - name: CocoaPods 'Numberick-DoubleWidthKit' Lint & Local Push 
        run: |
          sed -i '' "s|[[:blank:]]*s\.source[[:blank:]].*|s.source = { :http => 'file://${SOURCES_ZIP}' \}|g" pods/Numberick-DoubleWidthKit.podspec
          pod repo push --allow-warnings local pods/Numberick-DoubleWidthKit.podspec
          pod repo update
      - name: CocoaPods 'Numberick' Lint
        run: |
          cp pods/Numberick.podspec ./
          pod lib lint --allow-warnings --fail-fast --sources="local,https://cdn.cocoapods.org" Numberick.podspec
      - name: Cleanup
        if: always()
        run: |
          [ -f "${SOURCES_ZIP}" ] && rm -f "${SOURCES_ZIP}"
          [ -d "${COCOAPODS_LOCAL_REPO}" ] && rm -rf "${COCOAPODS_LOCAL_REPO}"
          rm -f Numberick.podspec
          pod repo remove local
  linux:
    strategy:
      matrix:
        tests: 
          - swift: '5.7'
            features: '-StaticBigInt'
          - swift: '5.8'
            features: '-StaticBigInt'
          - swift: '5.8'
            features: '+StaticBigInt'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: swift:${{ matrix.tests.swift }}
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --security-opt apparmor=unconfined
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Select Swift custom features
        run: |
          for feature in "${{ matrix.tests.features }}"
          do
            [ "${feature}" ] || continue
            status=$([[ "${feature}" = -* ]] && echo "false" || echo "true")
            feature="${feature:1}"
            sed -i "s|^let[[:blank:]]*with${feature}[[:blank:]]*=.*$|let with${feature} = ${status}|g" Package.swift
            echo "${feature} = ${status}"
          done
      - name: Build and Test
        run: swift test
      - name: Run Benchmarks
        run: swift test -c release